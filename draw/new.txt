
/*-----*\
| Image |
\*-----*/
var chatDrawCheck=window.setInterval(function () {
	if (document.getElementById("chatdraw")) {
		window.clearInterval(chatDrawCheck);
		converter();
	}
}, 100);

function converter() {
    
    
    
var drawer = LocalChatDraw.getDrawer();
var sidePane = document.querySelector("#sidepane");
var cW = 200, cH = 100;
var cR = cW / cH; //width to height ratio
var cM = Math.min(cW, cH); //the smaller dimension
var colorButtons = document.querySelectorAll("button.colorChange");

////////////////
//IMAGE UPLOAD//
////////////////
var z = new Image();
var isImage = false;
//paste box
var pasteImageHere = document.createElement("div");
pasteImageHere.style.width = "3.25rem";
pasteImageHere.contentEditable = true;
pasteImageHere.oninput = function () {
	var thing = this.getElementsByTagName("img")[0];
	if (thing) {
		loadImage(thing.src);
	}
	while (this.firstChild) {
		this.removeChild(this.lastChild); //delete everything
	}
};
document.querySelector("#sendpane").appendChild(pasteImageHere);
//file upload button
var fileBrowse = document.createElement("input");
fileBrowse.type = "file";
fileBrowse.onchange = function () {
	console.log("User uploaded an image...");
	var reader = new FileReader();
	reader.readAsDataURL(this.files[0]);
	reader.onload = function () {
		loadImage(this.result);
	};
};

//image loading
function loadImage(source) {
	console.log("Found an image. (assume load failed)");
	z = new Image();
	z.crossOrigin = "Anonymous";
	z.onload = function () {
		console.log("Image loaded successfully!");
		moveBoxParent.style.backgroundImage = "url(\"" + source + "\")";
		isImage = true;
		updateImage();
	};
	z.src=source;
}
/////////////////
//image editing//
/////////////////
var elemX=0,elemY=0;
var offsetX,offsetY;
var moving=false;
var scale=1;
const mouseSens=200;
var frames = LocalChatDraw.getAnimateFrames();

//preview/color picker canvas
var canvas = document.createElement("canvas");
canvas.width = cW;
canvas.height = cH;
canvas.style.backgroundColor = "white";
canvas.style.border = "1px solid black";
var c2d = canvas.getContext("2d");

//dither slider
var ditherSlider = document.createElement("input");
ditherSlider.type = "range";
ditherSlider.min = "0";
ditherSlider.max = "1";
ditherSlider.step = "0.001";
ditherSlider.onchange = function () {
	updateImage();
};

var updateImageTimeout;
//selection box parent
var moveBoxParent = document.createElement("div");
moveBoxParent.style.width = cW + "px";
moveBoxParent.style.height = cH + "px";
moveBoxParent.style.backgroundSize = "contain";
moveBoxParent.style.backgroundRepeat = "no-repeat";
moveBoxParent.style.backgroundColor = "white";
moveBoxParent.style.border = "1px solid black";
moveBoxParent.onmousemove = function(event) {
	if (moving) {
		updateMoveBoxPos(event.clientX-offsetX,event.clientY-offsetY);
	}
};

function getSelectedColorButton(){
	for(var i=0;i<colorButtons.length;i++){
		if(colorButtons[i].dataset.selected=="true"){
			return i;
		}
	}
	return -1;
}

moveBoxParent.onmouseup = moveBoxParent.onmouseleave = function() {
	moving = false;
	moveBox.style.cursor = "grab";
	updateImage();
};
moveBoxParent.onwheel = function(event) {
	updateScale(scale + event.deltaY / mouseSens);
	window.clearTimeout(updateImageTimeout);
	updateImageTimeout = window.setTimeout(function() {
		updateImage();
	}, mouseSens);
};

//selection box
var moveBox = document.createElement("div");
moveBox.style.position = "relative";
moveBox.style.border = "1px solid red";
moveBox.style.width = cW - 2 + "px";
moveBox.style.height = cH - 2 + "px";
moveBox.style.cursor = "grab";
moveBox.onmousedown = function(event) {
	moving = true;
	moveBox.style.cursor = "grabbing";
	offsetX = event.clientX - elemX;
	offsetY = event.clientY - elemY;
};

//scale slider
var scaleSlider = document.createElement("input");
scaleSlider.type = "range";
scaleSlider.min = 0.0001;
scaleSlider.max = 1;
scaleSlider.step = 0.0001;
scaleSlider.value = 1;
scaleSlider.oninput = function(){
	updateScale(this.value);
};
scaleSlider.onchange = function(){
	updateImage();
};

//blurring checkbox
var blurring = document.createElement("input");
blurring.type = "checkbox";
blurring.checked = false;
blurring.onchange = function() {
	c2d.webkitImageSmoothingEnabled = c2d.imageSmoothingEnabled = this.checked;
	updateImage();
};

//clear button
var clear = document.createElement("button");
clear.addEventListener("click", function() {
	isImage = false;
	moveBoxParent.style.backgroundImage = "";
	c2d.clearRect(0, 0, cW, cH);
});
clear.innerHTML="clear";

//movebox functions
function updateScale(newScale) {
	var oldScale = scale;
	scale = Math.min(Math.max(newScale, 0.001), 1);
	var midX = elemX + oldScale * cW / 2;
	var midY = elemY + oldScale * cH / 2;
	updateMoveBoxPos(midX - scale * cW / 2, midY - scale * cH / 2);
	moveBox.style.width = Math.max(scale * cW - 2, 0) + "px";
	moveBox.style.height = Math.max(scale * cH - 2, 0) + "px";
	scaleSlider.value = scale;
}
function updateMoveBoxPos(x, y) {
	elemX = Math.min(Math.max(x, 0), (1 - scale) * cW);
	elemY = Math.min(Math.max(y, 0), (1 - scale) * cH);
	moveBox.style.left = elemX + "px";
	moveBox.style.top = elemY + "px";
}

//set button
var apply = document.createElement("button");
apply.addEventListener("click", function() {
	var frame = frames.GetFrame();
	frame.canvas.getContext("2d").drawImage(canvas,0,0);
	frames.SetFrame(frame);
});
apply.innerHTML="SET";

sidePane.appendChild(fileBrowse);
sidePane.appendChild(clear);
sidePane.appendChild(document.createElement("br"));

sidepane.appendChild(moveBoxParent);
moveBoxParent.appendChild(moveBox);
sidepane.appendChild(scaleSlider);
sidePane.appendChild(document.createElement("br"));
sidePane.appendChild(ditherSlider);
sidePane.appendChild(document.createElement("br"));
sidePane.appendChild(blurring);
sidePane.appendChild(document.createTextNode("Smooth Resize"));
sidePane.appendChild(document.createElement("br"));
sidePane.appendChild(canvas);
sidePane.appendChild(document.createElement("br"));
sidePane.appendChild(apply);

////////////////////
//Image Conversion//
////////////////////
var colorButtons = document.querySelectorAll("#chatdraw button-area button.colorChange");
var paletteSize = colorButtons.length;
var colorWeight = [3, 6, 1];
document.getElementById("colorPicker").addEventListener("change",function() {
	updateImage();
});

var sizeButton = document.querySelector("#chatdraw button-area button[data-width]");

sizeButton.addEventListener("mousedown", function(event) {
	if (event.buttons & 2){
		for (var i = 1; i <= 6; i++){
			sizeButton.click();
		}
	}
});

sizeButton.addEventListener("contextmenu", function(event) {
	event.preventDefault();
});

function updateImage() {
	if (isImage) {
		putImage(z);
	}
}

//the actual converter!
function putImage(img) {
	var dither = ditherSlider.value;
	var i, palette = [];
	c2d.rect(0, 0, cW, cH);
	c2d.fillStyle = "white";
	c2d.fill(); //clear canvas
	var maxHeight = Math.max(img.width / cW, img.height / cH) * cM;
	c2d.drawImage(img, elemX / cW * maxHeight * cR, elemY / cH * maxHeight, scale * maxHeight * cR, scale * maxHeight, 0, 0, cW, cH);
	var data = c2d.getImageData(0, 0, cW, cH);
	
	for (i = 0; i < paletteSize; i++) {
		palette.push(fillStyleToRgb(colorButtons[i].style.color));
	}
	
	for (var x = 0, bestIndex, nextErr; x < cW * cH * 4; x += 4) {
		//find the best color
		var bestDist = Infinity;
		for (i = 0; i < paletteSize && bestDist !== 0; i++) {
			for (var j = 0, dist = 0, color = palette[i]; j < 3; j++) {
				dist += Math.abs(data.data[x + j] - color[j]) * colorWeight[j];
			}
			if (dist < bestDist){
				bestDist = dist;
				bestIndex = i;
			}
		}
		//dithering
		if (dither){
			for (i = 0; i < 3; i++) {
				var err = (data.data[x + i] - palette[bestIndex][i]) * dither / 3;
				data.data[x              + i] = palette[bestIndex][i];
				data.data[x          + 4 + i] += err;   // right
				data.data[x + cW * 4 - 4 + i] += err / 2; // bottom left
				data.data[x + cW * 4     + i] += err;   // bottom
				data.data[x + cW * 4 + 4 + i] += err / 2; // bottom right
			}
		} else {
			for (i = 0; i < 3; i++) {
				data.data[x + i] = palette[bestIndex][i];
			}
		}
	}
	c2d.putImageData(data, 0, 0);
	drawer.Redraw();
	console.log("Image conversion sucessful.");
}

}

