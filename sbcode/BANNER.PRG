OPTION DEFINT
OPTION STRICT

EXEC "PRG1:UNDO.LIB"

VAR I,X,Y,this
VAR X0,Y0
VAR TEMP

'CONSTANT FOR NUMBER OF LAYERS
'BG COLOR IS TREATED AS A LAYER
VAR C_LAYERS=7

'NUMBER OF PATTERNS
'AFFECTS LOCATION OF OVERLAY TOO
VAR C_PATTERNS=38

VAR C_COLORS=16

'= reset =
ACLS
SNDSTOP
EFCWET 0,0,0
SYSBEEP=TRUE
XSCREEN 2,256,2
SPCLRDEF
'= load =
DIM PATTERNS[40,40,20]
LOAD "DAT:PATTERNS.DAT",PATTERNS,FALSE
DIM COLORS[C_COLORS]
COPY COLORS,@COLORS

@COLORS
DATA &HF9FFFE,&HF9801D,&HC74EBD,&H3AB3DA
DATA &HFED83D,&H80C71F,&HF38BAA,&H474F52
DATA &H9D9D97,&H169C9C,&H8932B8,&H3C44AA
DATA &H835432,&H5E7C16,&HB02E26,&H1D1D21
'OLD COLORS
'DATA &HFFFFFF,&HD87F33,&HB24CD8,&H6699D8
'DATA &HE5E533,&H7FCC19,&HF27FA5,&H4C4C4C
'DATA &H999999,&H4C7F99,&H7F3FB2,&H334CB2
'DATA &H664C33,&H667F33,&H993333,&H191919

'GRPALLOC SETUP
VAR GRPALLOC_I
DIM GRP[512,512]

'== Colors ==
VAR C_OUTER=RGB(38,27,19)
VAR C_INNER=GRAY(111)
VAR C_DARK=GRAY(85)
VAR C_LIGHT=GRAY(170)
VAR C_SELDARK=RGB(85*2,85*2,85)
VAR C_SELLIGHT=RGB(170*2,170*2,170/2)
VAR C_DISABLED=GRAY(44)
VAR C_RED=RGB(200,50,50)

'==============
'=== SPDEFS ===
'==============

GEDIT 4
GCLS

'= patterns =
VAR D_PATTERN=DEFALLOC(C_PATTERNS+1)
FOR I=0 TO C_PATTERNS+1-1
 GRPALLOC 20,40
 SPDEF this,X0,Y0,20,40
 FOR X=0 TO 20-1
  FOR Y=0 TO 40-1
   TEMP=PATTERNS[I,Y,X]
   GPSET X0+X,Y0+Y,RGB(TEMP,TEMP,TEMP)
  NEXT
 NEXT
 INC this
NEXT

'= blank 20x40 =
VAR D_BLANK=DEFALLOC(1)
GRPALLOC 20,40
SPDEF this,X0,Y0,20,40

'= color buttons =
VAR D_COLOR=DEFALLOC(1)
GRPALLOC 30,15
SPDEF this,X0,Y0,30,15 '
GFILL X0,Y0,X0+30-1,Y0+15-1,#WHITE

'= delete buttons =
VAR D_DELETE=DEFALLOC(1)
GRPALLOC 40,20
SPDEF this,X0,Y0,40,20 'X
BORDER X0,Y0,40,20,C_LIGHT,C_DARK,C_INNER
GPUTCHR X0+13,Y0+3,"",2,2,C_RED

'= can't delete =
VAR D_NODELETE=DEFALLOC(1)
GRPALLOC 40,20
SPDEF this,X0,Y0,40,20 'X
BORDER X0,Y0,40,20,#BLACK,#BLACK,C_DISABLED
GPUTCHR X0+13,Y0+3,"",2,2,#MAROON

'= swap buttons =
VAR D_SWAP=DEFALLOC(1)
GRPALLOC 40,20
SPDEF this,X0,Y0,40,20 '><
BORDER X0,Y0,40,20,C_LIGHT,C_DARK,C_INNER
GPUTCHR X0+4,Y0+3,"",2,2,C_RED

'= select pattern =
VAR D_PSELECT=DEFALLOC(1)
GRPALLOC 20,40
SPDEF this,X0,Y0,20,40 '
BORDER2 X0,Y0,20,40,C_SELDARK,C_SELLIGHT,0

'= select color =
VAR D_CSELECT=DEFALLOC(1)
GRPALLOC 30,15
SPDEF this,X0,Y0,30,15 '
BORDER2 X0,Y0,30,15,C_SELDARK,C_SELLIGHT,0

'= select layer =
VAR D_LSELECT=DEFALLOC(1)
GRPALLOC 40,80
SPDEF this,X0,Y0,40,80 '
BORDER2 X0,Y0,40,80,C_SELDARK,C_SELLIGHT,0

'= menu select =
VAR D_MSELECT=DEFALLOC(1)
GRPALLOC 40,20
SPDEF this,X0,Y0,40,20 '
BORDER2 X0,Y0,40,20,C_SELDARK,C_SELLIGHT,0

'= final render =
VAR D_RENDER=DEFALLOC(1)
GRPALLOC 20,20
SPDEF this,X0,Y0,20,40

'===============
'=== SPRITES ===
'===============

'== Top Screen ==
DISPLAY 0

'= final render =
VAR S_RENDER=SPALLOC(1)
SPSET   this,D_RENDER
SPSCALE this,6,6
'SPOFS   this,(400-(6*20))/2,0

'== Bottom Screen ==
DISPLAY 1
GPRIO -1

'= pattern buttons =
VAR S_PATTERN=SPALLOC(C_PATTERNS)
FOR I=0 TO C_PATTERNS-1
 X=I MOD 13*20
 Y=I DIV 13*40
 SPSET this,D_PATTERN+I
 SPOFS this,X,Y
 SPCOL this,TRUE
 BORDER X,Y,20,40,C_LIGHT,C_DARK,0
 INC this
NEXT

'= color buttons =
VAR S_COLOR=SPALLOC(C_COLORS)
FOR I=0 TO C_COLORS-1
 SPSET   this,D_COLOR
 SPCOL   this,TRUE
 SPCOLOR this,COLORS[I] OR #BLACK
 X=260+I MOD 2*30
 Y=I DIV 2*15
 SPOFS   this,X,Y
 BORDER X,Y,30,15,C_LIGHT,C_DARK,0
 INC this
NEXT

'= layer buttons =
VAR S_LAYER=SPALLOC(C_LAYERS)
FOR I=0 TO C_LAYERS-1
 X=I*40
 SPSET   this,D_BLANK
 SPCOL   this,TRUE
 SPSCALE this,2,2
 SPOFS   this,X,160
 BORDER X,160,40,80,C_LIGHT,C_DARK,0
 INC this
NEXT

'= delete layer =
VAR S_DELETE=SPALLOC(C_LAYERS-1)
FOR I=0 TO C_LAYERS-1-1
 SPSET this,D_NODELETE
 SPOFS this,I*40+40,120
 SPCOL this,TRUE
 INC this
NEXT

'= swap layers =
VAR S_SWAP=SPALLOC(C_LAYERS-2)
FOR I=0 TO C_LAYERS-2-1
 SPSET this,D_SWAP
 SPOFS this,I*40+60,140
 SPCOL this,TRUE
 INC this
NEXT

VAR S_DELETEALL=SPALLOC(1)
SPSET this,D_DELETE
SPOFS this,0,120
SPCOL this,TRUE

'= deselect =
VAR S_DESELECT=SPALLOC(1)
SPSET this,0,0,0,0
SPOFS this,512,512

'= selection boxes =
VAR S_PSELECT=SPALLOC(1)
SPSET  this,D_PSELECT
SPPRIO this,-2
SPLINK this,S_DESELECT

VAR S_CSELECT=SPALLOC(1)
SPSET  this,D_CSELECT
SPPRIO this,-2
SPLINK this,S_DESELECT

VAR S_LSELECT=SPALLOC(1)
SPSET  this,D_LSELECT
SPPRIO this,-2
SPLINK this,S_DESELECT

VAR S_MSELECT=SPALLOC(1)
SPSET  this,D_MSELECT
SPPRIO this,-2
SPLINK this,S_DESELECT

'====================
'=== MAIN PROGRAM ===
'====================

BACKCOLOR C_OUTER

DIM LAYER[C_LAYERS,2]
FILL LAYER,-1
LAYER[0,0]=C_PATTERNS
LAYER[0,1]=0

UNDOPUSH LAYER

VAR LSEL=0
VAR TT,OT,TX,TY

UPDATE_SELECT
UPDATE_LAYERS
UPDATE_IMAGE

WHILE TRUE
 VSYNC
 
 VAR BTN=BUTTON(2)
 
 IF BTN==0 THEN'DO NOTHING
  '= undo =
 ELSEIF BTN AND #L && CANUNDO(LAYER) THEN
  UNDOPOP LAYER
  CLICK
  UPDATE_SELECT
  UPDATE_LAYERS
  UPDATE_IMAGE
  '= redo =
 ELSEIF BTN AND #R && CANREDO(LAYER) THEN
  REDOPOP LAYER
  CLICK
  UPDATE_SELECT
  UPDATE_LAYERS
  UPDATE_IMAGE
  '= select layer =
 ELSEIF BTN AND #LEFT && LSEL>0 THEN
  CLICK
  DEC LSEL
  UPDATE_SELECT
 ELSEIF BTN AND #RIGHT && LSEL<C_LAYERS-1 THEN
  CLICK
  INC LSEL
  UPDATE_SELECT
  '= save =
 ELSEIF BTN AND #X THEN
  CLICK
  VAR FILE$=DIALOG("","Save banner",14-4)
  IF RESULT==TRUE THEN
   SAVE "DAT:"+FILE$+".DAT",LAYER
  ENDIF
  '= load =
 ELSEIF BTN AND #Y THEN
  CLICK
  FILE$=DIALOG("","Load banner",14-4)
  IF RESULT==TRUE THEN
   DIM TEMPARRAY[0,0]
   LOAD "DAT:"+FILE$+".DAT",TEMPARRAY,FALSE
   IF RESULT==TRUE && LEN(TEMPARRAY)==C_LAYERS*2 THEN
    COPY LAYER,TEMPARRAY
    LAYER[0,0]=C_PATTERNS
    UPDATE_SELECT
    UPDATE_LAYERS
    UPDATE_IMAGE
    UNDOPUSH LAYER
   ENDIF
  ENDIF
 ENDIF
 
 OT=TT
 TOUCH OUT TT,TX,TY
 
 IF TT==0 THEN
  VAR PRESS=-1
  SPLINK S_MSELECT,S_DESELECT
 ELSE
  PRESS=SPHITP(TX,TY)
 ENDIF
 
 IF PRESS==-1||TT&&OT THEN'DO NOTHING
 '= choose pattern =
 ELSEIF IN(PRESS,S_PATTERN,C_PATTERNS)&&LSEL!=0 THEN
  IF LAYER[LSEL,0]!=PRESS-S_PATTERN THEN
   CLICK
   LAYER[LSEL,0]=PRESS-S_PATTERN
   IF LAYER[LSEL,1]==-1 THEN LAYER[LSEL,1]=0
   UPDATE_SELECT
   UPDATE_LAYER LSEL
   UPDATE_IMAGE
   UNDOPUSH LAYER
  ENDIF
 '= choose color =
 ELSEIF IN(PRESS,S_COLOR,C_COLORS) THEN
  IF LAYER[LSEL,1]!=PRESS-S_COLOR THEN
   CLICK
   LAYER[LSEL,1]=PRESS-S_COLOR
   UPDATE_SELECT
   UPDATE_LAYER LSEL
   UPDATE_IMAGE
   UNDOPUSH LAYER
  ENDIF
 '= choose layer =
 ELSEIF IN(PRESS,S_LAYER,C_LAYERS) THEN
  IF LSEL!=PRESS-S_LAYER THEN
   CLICK
   LSEL=PRESS-S_LAYER
   UPDATE_SELECT
  ENDIF
 '= delete layer =
 ELSEIF IN(PRESS,S_DELETE,C_LAYERS-1) THEN
  VAR MSELL=PRESS-S_DELETE+1
  IF LAYER[MSELL,0]!=-1 || LAYER[MSELL,1]!=-1 THEN
   CLICK
   SPLINK S_MSELECT,PRESS
   LAYER[MSELL,0]=-1
   LAYER[MSELL,1]=-1
   UPDATE_LAYER MSELL
   UPDATE_SELECT
   UPDATE_IMAGE
   UNDOPUSH LAYER
  ENDIF
 '= move layer =
 ELSEIF IN(PRESS,S_SWAP,C_LAYERS-2) THEN
  MSELL=PRESS-S_SWAP+1
  CLICK
  SPLINK S_MSELECT,PRESS
  SWAP LAYER[MSELL,0],LAYER[MSELL+1,0]
  SWAP LAYER[MSELL,1],LAYER[MSELL+1,1]
  IF LSEL==MSELL THEN
   LSEL=MSELL+1
  ELSEIF LSEL==MSELL+1 THEN
   LSEL=MSELL
  ENDIF
  UPDATE_LAYER MSELL+1
  UPDATE_LAYER MSELL
  UPDATE_SELECT
  UPDATE_IMAGE
  UNDOPUSH LAYER
 '= reset =
 ELSEIF IN(PRESS,S_DELETEALL,1) THEN
  CLICK
  SPLINK S_MSELECT,PRESS
  FILL LAYER,-1
  LAYER[0,0]=C_PATTERNS
  LAYER[0,1]=0
  UPDATE_LAYERS
  UPDATE_SELECT
  UPDATE_IMAGE
  UNDOPUSH LAYER
 ENDIF
WEND

'= check if value is in range
DEF IN(VALUE,LOW,RANGE)
 RETURN VALUE>=LOW&&VALUE<LOW+RANGE
END

'== Render Banner ==
DEF UPDATE_IMAGE
 GEDIT 4
 DIM IMG[40,20]
 FILL IMG,COLORS[LAYER[0,1]]
 VAR I,X,Y
 'patterns
 FOR I=1 TO C_LAYERS-1
  VAR PAT=LAYER[I,0]
  IF PAT!=-1 THEN
   VAR COL=COLORS[LAYER[I,1]]
   FOR X=0 TO 20-1
    FOR Y=0 TO 40-1
     VAR PIX=PATTERNS[PAT,Y,X]
     IF PIX THEN IMG[Y,X]=BLEND(IMG[Y,X],COL,PIX)
    NEXT
   NEXT
  ENDIF
 NEXT
 'overlay
 FOR X=0 TO 20-1
  FOR Y=0 TO 40-1
   IMG[Y,X]=BLEND(0,IMG[Y,X],PATTERNS[C_PATTERNS,Y,X])
  NEXT
 NEXT
 'draw
 VAR X0,Y0
 SPDEF D_RENDER OUT X0,Y0
 GLOAD X0,Y0,20,40,IMG,0,1
END

'= alpha blending =
DEF BLEND(Cb,Cf,Af)
 VAR Rb,Gb,Bb,Rf,Gf,Bf
 RGBREAD Cf OUT Rf,Gf,Bf
 RGBREAD Cb OUT Rb,Gb,Bb
 VAR Af#=Af/255
 VAR Bf#=1-Af#
 RETURN RGB(Rf*Af#+Rb*Bf#,Gf*Af#+Gb*Bf#,Bf*Af#+Bb*Bf#)
END

DEF GRAY(LEVEL)
 RETURN RGB(LEVEL,LEVEL,LEVEL)
END

'== Update Selection Boxes ==
DEF UPDATE_SELECT
 SPLINK S_LSELECT,S_LAYER+LSEL
 IF LSEL==0 THEN
  SPLINK S_PSELECT,S_DESELECT
  SPLINK S_CSELECT,S_COLOR+LAYER[LSEL,1]
 ELSE
  IF LAYER[LSEL,0]!=-1 THEN
   SPLINK S_PSELECT,S_PATTERN+LAYER[LSEL,0]
  ELSE
   SPLINK S_PSELECT,S_DESELECT
  ENDIF
  IF LAYER[LSEL,1]!=-1 THEN
   SPLINK S_CSELECT,S_COLOR+LAYER[LSEL,1]
  ELSE
   SPLINK S_CSELECT,S_DESELECT
  ENDIF
 ENDIF
END

'== Update Layer Images ==
DEF UPDATE_LAYER L
 IF LAYER[L,0]==-1 || LAYER[L,1]==-1 THEN
  SPCHR S_LAYER+L,D_BLANK
  IF L!=0 THEN SPCHR S_DELETE+L-1,D_NODELETE
 ELSE
  SPCHR S_LAYER+L,D_PATTERN+LAYER[L,0]
  'INCREASE BRIGHTNESS OF LAYER BUTTONS
  VAR R,G,B
  RGBREAD COLORS[LAYER[L,1]] OUT R,G,B
  SPCOLOR S_LAYER+L,RGB(R+30,G+30,B+30)
  
  IF L!=0 THEN SPCHR S_DELETE+L-1,D_DELETE
 ENDIF
END

DEF UPDATE_LAYERS
 VAR I
 FOR I=0 TO C_LAYERS-1
  UPDATE_LAYER I
 NEXT
END

'= memes lol =
DEF EAT SAND END
DEF FREE()
 DIM ARRAY[0]
 RETURN ARRAY
END

'= find available sprites =
DEF SPALLOC(LENGTH)
 VAR RUN=0
 VAR I
 FOR I=0 TO 255
  IF SPUSED(I)==0 THEN INC RUN ELSE RUN=0
  IF RUN>=LENGTH THEN
   this=I-RUN+1
   RETURN this
  ENDIF
 NEXT
END

'= find available definitions =
DEF DEFALLOC(LENGTH)
 VAR ATTRIB
 VAR RUN=0
 VAR I
 FOR I=0 TO 4095
  SPDEF I OUT ,,ATTRIB
  IF ATTRIB==0 THEN INC RUN ELSE RUN=0
  IF RUN>=LENGTH THEN
   this=I-RUN+1
   RETURN this
  ENDIF
 NEXT
END

'REALLY BAD :(
'= find unused space on spritesheet =
DEF GRPALLOC W,H
 X0=GRPALLOC_I MOD 12*40
 Y0=GRPALLOC_I DIV 12*40
 INC GRPALLOC_I
END

'== Drawing ==
DEF GRECT X,Y,W,H,C
 GFILL X,Y,X+W-1,Y+H-1,C
END

'= draw border =
DEF BORDER X,Y,W,H,C1,C2,CF
 GLINE X,Y,X+W-1,Y,C1
 GLINE X,Y,X,Y+H-1,C1
 GLINE X+1,Y+H-1,X+W-1,Y+H-1,C2
 GLINE X+W-1,Y+1,X+W-1,Y+H-1,C2
 IF CF THEN GFILL X+1,Y+1,X+W-2,Y+H-2,CF
END

'= draw thick border =
DEF BORDER2 X,Y,W,H,C1,C2,CF
 BORDER X,Y,W,H,C1,C2,CF
 BORDER X+1,Y+1,W-2,H-2,C1,C2,CF
END

'= change manipulation page only =
DEF GEDIT EDIT
 VAR DISP
 GPAGE OUT DISP,
 GPAGE DISP,EDIT
END

'= menu sound =
DEF CLICK
 BEEP 95,2000
END

'= clear all sprite defs =
DEF SPCLRDEF
 DIM DEFS[4096*7]
 SPDEF DEFS
END

'= check for sprite at point =
DEF SPHITP(X,Y)
 RETURN SPHITRC(X,Y,1,1)
END

DEF SPHITPX(EXCLUDE,X,Y)
 RETURN MAX(SPHITRC(0,EXCLUDE-1,X,Y,1,1),SPHITRC(EXCLUDE+1,511,X,Y,1,1))
END

'= set z position of sprite =
DEF SPPRIO ID,Z
 SPOFS ID,,,Z
END
