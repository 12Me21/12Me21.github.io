DATA "LZSS LIBRARY FOR PETITCOM"
DATA "     2015/07/12 Ver.1.0.2"
DATA "             REI SOFTWARE"
DATA ""

OPTION STRICT
ACLS:XSCREEN 1

DIM ST%,ET%
DIM G%[0],W%,H%
DIM C%[0],G2%[0],W2%,H2%
DIM T$,T2$
DIM CT%[0]

'GOTO @TEST_GRP
'GOTO @TEST_TEXT
'-----------
@TEST_GRP
'102
GCLS RGB(0,128,128)
PRINT "LOADING LZIMAGE FILE..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
LOADLZIMAGE "ROSE.PZG",G%,TRUE OUT W%,H%
'LOADLZIMAGE "PRONAMA.PZG",G%,TRUE OUT W%,H%
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
GLOAD 200-W%/2,120-H%/2,W%,H%,G%,1,0
PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND
'-----------
'628
GCLS RGB(0,128,128)
PRINT "COMPRESSING GLOAD ARRAY..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
LZIMAGE G%,C%,W%,H%,TRUE
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
PRINT "BEFORE:"+STR$(LEN(G%))
PRINT "AFTER:"+STR$(LEN(C%))

PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND
'-----------
GCLS RGB(0,128,128)
PRINT "DECOMPRESSING TO GLOAD ARRAY..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
UNLZIMAGE C%,G2%,TRUE OUT W2%,H2%
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
PRINT "BEFORE:"+STR$(LEN(C%))
PRINT "AFTER:"+STR$(LEN(G2%))
GLOAD 200-W2%/2,120-H2%/2,W2%,H2%,G2%,1,0
PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND
'-----------
@TEST_TEXT
'12
GCLS RGB(0,0,0)
PRINT "LOADING LZ STRING..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
LOADLZSTRING "OTSU.PZT",TRUE OUT T$
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
PRINT MID$(T$,0,200)+"..."
PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND
'-----------
'47
PRINT "COMPRESSING STRING..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
LZSTRING T$,CT%,TRUE
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
PRINT "BEFORE:"+STR$(LEN(T$))
PRINT "AFTER:"+STR$(LEN(CT%))
PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND
'-----------
PRINT "DECOMPRESSING TO STRING..."
ST%=MAINCNT+1:WHILE MAINCNT<ST%:WEND
UNLZSTRING CT%,TRUE OUT T2$
ET%=MAINCNT
PRINT "DONE."
PRINT "FRAMES:"+STR$(ET%-ST%)
PRINT "BEFORE:"+STR$(LEN(CT%))
PRINT "AFTER:"+STR$(LEN(T2$))
PRINT MID$(T2$,0,200)+"..."
PRINT "PUSH ANY KEY"
WHILE BUTTON(0)==0:VSYNC 1:WEND






END
'------------------------------------------
'                 LZSS LIBRARY FOR PETITCOM
'                       2015/7/12 Ver.1.0.2
'                              Rei Software
'
'FUNCTIONS
'
'SAVELZIMAGE - SAVE LZIMAGE FORMAT FILE
' FILENAME$:FILENAME TO SAVE
' IN%[]:GLOAD ARRAY
' W%:IMAGE WIDTH
' H%:IMAGE HEIGHT
' PROG:DISPLAY PROGRESS
'
'LOADLZIMAGE - LOAD LZIMAGE FORMAT FILE
' FILENAME$:FILENAME TO LOAD
' OUT%[]:GLOAD ARRAY
' PROG:DISPLAY PROGRESS
' [OUT] W%:IMAGE WIDTH
' [OUT] H%:IMAGE HEIGHT
'
'LZIMAGE - COMPRESS GLOAD ARRAY
' IN%[]:SOURCE GLOAD ARRAY
' OUT%[]:COMPRESSED ARRAY
' W%:IMAGE WIDTH
' H%:IMAGE HEIGHT
' PROG:DISPLAY PROGRESS
'
'UNLZIMAGE - DECOMPRESS TO GLOAD ARRAY
' IN%[]:SOURCE COMPRESSED ARRAY
' OUT%[]:GLOAD ARRAY
' PROG:DISPLAY PROGRESS
' [OUT] W%:IMAGE WIDTH
' [OUT] H%:IMAGE HEIGHT
'
'LZSTRING - COMPRESS STRING
' IN$:SOURCE STRING
' OUT%[]:COMPRESSED ARRAY
' PROG:DISPLAY PROGRESS
'
'UNLZSTRING - DECOMPRESS STRING
' IN%[]:SOURCE COMPRESSED ARRAY
' PROG:DISPLAY PROGRESS
' [OUT] OUT$:DECOMPRESSED STRING
'
'LZ - COMPRESS NUMBER ARRAY
' IN%[]:SOURCE ARRAY
' OUT%[]:COMPRESSED ARRAY
' WLB%:WINDOWSIZE IN BIT (RECOMMEND 10)
' MLB%:MAX REPETITION IN BIT (RECOMMEND 5)
' LLB%:MIN REPETITION IN BYTE (RECOMMEND 3)
' BIT%:BITS OF SOURCE ARRAY(16/32)
' PROG:DISPLAY PROGRESS
'
'UNLZ - DECOMPRESS NUMBER ARRAY
' IN%[]:SOURCE ARRAY
' INOFS%:START INDEX OF SOURCE ARRAY
' OUT%[]:DECOMPRESSED ARRAY
' WLB%:WINDOWSIZE IN BIT
' MLB%:MAX REPETITION IN BIT
' BIT%:BITS OF DECOMPRESSED ARRAY(16/32)
' PROG:DISPLAY PROGRESS
'
DEF SAVELZIMAGE FILENAME$,IN%[],W%,H%,PROG%
 DIM P%[0],V%
 LZIMAGE IN%,P%,W%,H%,PROG%
 SAVE "DAT:"+FILENAME$,P%
 WHILE LEN(P%)>0:V%=POP(P%):WEND
END

DEF LOADLZIMAGE FILENAME$,OUT%[],PROG% OUT W%,H%
 DIM P%[0],V%
 LOAD "DAT:"+FILENAME$,P%,FALSE
 UNLZIMAGE P%,OUT%,PROG% OUT W%,H%
 WHILE LEN(P%)>0:V%=POP(P%):WEND
END

DEF SAVELZSTRING FILENAME$,IN$,PROG%
 DIM P%[0],V%
 LZSTRING IN$,P%,PROG%
 SAVE "DAT:"+FILENAME$,P%
 WHILE LEN(P%)>0:V%=POP(P%):WEND
END

DEF LOADLZSTRING FILENAME$,PROG% OUT OUT$
 DIM P%[0],V%
 LOAD "DAT:"+FILENAME$,P%,FALSE
 UNLZSTRING P%,PROG% OUT OUT$
 WHILE LEN(P%)>0:V%=POP(P%):WEND
END

DEF LZIMAGE IN%[],OUT%[],W%,H%,PROG%
 VAR WLB%=10,MLB%=5,MM%=3
 DIM P%[0]
 VAR I%,V%,DD%
 WHILE LEN(OUT%)>0:DD%=POP(OUT%):WEND
 PUSH OUT%,&H505A473A'PZG:
 PUSH OUT%,1'VERSION1
 PUSH OUT%,(W%<<16) OR H%'WIDTH&HEIGHT
 PUSH OUT%,WLB% OR (MLB%<<8)'LZ PARAM
 LZ IN%,OUT%,WLB%,MLB%,MM%,16,PROG%
END

DEF UNLZIMAGE IN%[],OUT%[],PROG% OUT W%,H%
 VAR WLB%,MLB%
 DIM P%[0],P2%[0]
 VAR V%,DD%
 IF IN%[0]!=&H505A473A THEN PRINT "INVALID DATA":STOP
 IF IN%[1]!=1 THEN PRINT "UNSUPPORTED VERSION":STOP
 W%  =(IN%[2]>>16)AND &HFFFF
 H%  = IN%[2]     AND &HFFFF
 WLB%= IN%[3]     AND &HFF
 MLB%=(IN%[3]>>8 )AND &HFF
 WHILE LEN(OUT%)>0:DD%=POP(OUT%):WEND
 UNLZ IN%,4,OUT%,WLB%,MLB%,16,PROG%
 WHILE LEN(OUT%)>W%*H%:DD%=POP(OUT%):WEND
END

DEF LZSTRING IN$,OUT%[],PROG%
 VAR WLB%=10,MLB%=5,MM%=3
 DIM P%[LEN(IN$)]
 VAR I%,V%,DD%
 FOR I%=0 TO LEN(IN$)-1
  P%[I%]=ASC(IN$[I%])
 NEXT
 WHILE LEN(OUT%)>0:DD%=POP(OUT%):WEND
 PUSH OUT%,&H505A543A'PZT:
 PUSH OUT%,1'VERSION
 PUSH OUT%,LEN(IN$)'LENGTH
 PUSH OUT%,WLB% OR (MLB%<<8)'LZ PARAM
 LZ P%,OUT%,WLB%,MLB%,MM%,16,PROG%
 WHILE LEN(P%)>0:V%=POP(P%):WEND
END

DEF UNLZSTRING IN%[],PROG% OUT OUT$
 VAR WLB%,MLB%
 DIM P%[0]
 VAR V%,DD%,LEN%,I%
 IF IN%[0]!=&H505A543A THEN PRINT "INVALID DATA":STOP
 IF IN%[1]!=1 THEN PRINT "UNSUPPORTED VERSION":STOP
 LEN%= IN%[2]
 WLB%= IN%[3]     AND &HFF
 MLB%=(IN%[3]>>8 )AND &HFF
 UNLZ IN%,4,P%,WLB%,MLB%,16,PROG%
 OUT$=" "*LEN%
 FOR I%=0 TO LEN%-1
  OUT$[I%]=CHR$(P%[I%])
 NEXT
END

DEF UNLZ IN%[],INOFS%,OUT%[],WLB%,MLB%,BIT%,PROG%
 VAR J%=0,C%,L%,D%,B%,P%
 VAR OL%=0,O%=0,K%,I%
 VAR WL%=(1<<WLB%)-1
 VAR ML%=(1<<MLB%)-1
 VAR LEN_IN%=LEN(IN%)
 VAR CNT%=0,PRG1%
 DIM BB%[WL%+1]
 VAR BBI%=0
 IF PROG% THEN
  PRG1%=INOFS%*40/LEN_IN%
  PRINT "*"*PRG1%+"-"*(40-PRG1%)
 ENDIF
 
 P%=IN%[INOFS%]
 WHILE INOFS%<LEN_IN%
  IF PROG% THEN
   INC CNT%
   IF CNT%>16 THEN
    CNT%=0
    PRG1%=INOFS%*40/LEN_IN%
    LOCATE 0,CSRY-1
    PRINT "*"*PRG1%+"-"*(40-PRG1%)
   ENDIF
  ENDIF
  C%=(P%>>J%) AND 1
  INC J%
  IF J%>=32 THEN
   INC INOFS%:DEC J%,32
   IF INOFS%>=LEN_IN% THEN BREAK
   P%=IN%[INOFS%]
  ENDIF
  
  IF C%==0 THEN
   B%=(P%>>J%) AND 255
   INC J%,8
   IF J%>=32 THEN
    INC INOFS%:DEC J%,32
    B%= B% AND ((1<<(8-J%))-1)
    IF INOFS%<LEN_IN% THEN
     P%=IN%[INOFS%]
     B%=(B% OR (P%<<(8-J%))) AND 255
    ENDIF
   ENDIF
   O%=O% OR (B%<<OL%)
   BB%[BBI%]=B%
   INC BBI%:IF BBI%>WL% THEN BBI%=0
   INC OL%,8
   IF OL%>=BIT% THEN PUSH OUT%,O%:OL%=0:O%=0
  ELSE
   D%=((P%>>J%) AND WL%)
   INC J%,WLB%
   IF J%>=32 THEN
    INC INOFS%:DEC J%,32:P%=IN%[INOFS%]
    D%= D% AND ((1<<(WLB%-J%))-1)
    D%=(D% OR (P%<<(WLB%-J%))) AND WL%
   ENDIF
   L%=((P%>>J%) AND ML%)
   INC J%,MLB%
   IF J%>=32 THEN
    INC INOFS%:DEC J%,32
    L%= L% AND ((1<<(MLB%-J%))-1)
    IF INOFS%<LEN_IN% THEN
     P%=IN%[INOFS%]
     L%=(L% OR (P%<<(MLB%-J%))) AND ML%
    ENDIF
   ENDIF
   L%=L%+1
   K%=WL%-D%+BBI%
   IF K%>WL% THEN DEC K%,WL%+1
   FOR I%=1 TO L%
    B%=BB%[K%]
    O%=O% OR (B%<<OL%)
    BB%[BBI%]=B%
    INC BBI%:IF BBI%>WL% THEN BBI%=0
    INC K%:IF K%>WL% THEN K%=0
    INC OL%,8
    IF OL%>=BIT% THEN PUSH OUT%,O%:OL%=0:O%=0
   NEXT
  ENDIF
 WEND
 IF PROG% THEN LOCATE 0,CSRY-1:PRINT "*"*40
END

DEF LZ IN%[],OUT%[],WLB%,MLB%,MM%,BIT%,PROG%
 WLB%=MIN(MAX(WLB%,7),16)
 MLB%=MIN(MAX(MLB%,3),8)
 MM%=MIN(MAX(MM%,3),10)
 
 VAR WL%=(1<<WLB%)
 VAR WLM%=WL%-1
 VAR ML%=(1<<MLB%)-1
 VAR PH%,PL%,Q%,P%,P2%,OL%,O%
 VAR MD%,MP%,MLL%,D%,L%,B%,I%,DD%
 VAR LEN_IN% =LEN(IN%)
 VAR LEN_OUT%=LEN(IN%)*BIT%/8+ML%
 DIM BB%[WL%+ML%+1]
 DIM HS%[256],HL%[WL%]
 VAR H1%,H2%,HLI%=0
 VAR HS1%,HS2%,HS3%
 VAR CNT%=0,PRG1%
 
 FOR I%=0 TO 255:HS%[I%]=-1:NEXT
 PH%=0:PL%=0
 IF PH%<LEN_IN% THEN Q%=IN%[PH%] ELSE Q%=0
 P%=ML%
 FOR I%=0 TO ML%
  BB%[WL%+I%]=(Q%>>PL%) AND 255
  INC PL%,8:IF PL%>=BIT% THEN
   INC PH%:PL%=0
   IF PH%<LEN_IN% THEN Q%=IN%[PH%] ELSE Q%=0
  ENDIF
 NEXT
 HS1%=BB%[WL%]
 HS2%=BB%[WL%+1]
 HS3%=BB%[WL%+2]
 H1%=HS1% XOR HS2% XOR HS3%
 
 IF PROG% THEN
  PRG1%=P%*40/LEN_OUT%
  PRINT "*"*PRG1%+"-"*(40-PRG1%)
 ENDIF
 
 WHILE P%<LEN_OUT%
  IF PROG% THEN
   INC CNT%
   IF CNT%>16 THEN
    CNT%=0
    PRG1%=P%*40/LEN_OUT%
    LOCATE 0,CSRY-1
    PRINT "*"*PRG1%+"-"*(40-PRG1%)
   ENDIF
  ENDIF
  
  MLL%=-1
  H2%=HS%[H1%]
  WHILE H2%>=0
   D%=(P%-ML%)-H2%
   IF D%>WL% THEN BREAK
   L%=1:P2%=WL%-D%
   WHILE P%+L%<LEN_OUT%
    IF BB%[P2%+L%]!=BB%[WL%+L%] THEN BREAK
    INC L%
    IF L%>ML% THEN MD%=D%:MLL%=L%:GOTO @LZ1
   WEND
   IF L%>MLL% THEN MD%=D%:MLL%=L%
   DEC H2%,HL%[H2% AND WLM%]
  WEND
  
  @LZ1
  IF MLL%<MM% THEN
   MLL%=1
   INC OL%
   IF OL%>=32 THEN
    PUSH OUT%,O%:O%=0:OL%=0
   ENDIF
   B%=HS1%'BB%[WL%]
   O%=O% OR (B%<<OL%)
   INC OL%,8
   IF OL%>=32 THEN
    PUSH OUT%,O%:DEC OL%,32
    O%=B%>>(8-OL%)
   ENDIF
  ELSE
   O%=O% OR (1<<OL%)
   INC OL%
   IF OL%>=32 THEN
    PUSH OUT%,O%:O%=0:OL%=0
   ENDIF
   B%=MD%-1
   O%=O% OR (B%<<OL%)
   INC OL%,WLB%
   IF OL%>=32 THEN
    PUSH OUT%,O%:DEC OL%,32
    O%=B%>>(WLB%-OL%)
   ENDIF
   B%=MLL%-1
   O%=O% OR (B%<<OL%)
   INC OL%,MLB%
   IF OL%>=32 THEN
    PUSH OUT%,O%:DEC OL%,32
    O%=B%>>(MLB%-OL%)
   ENDIF
  ENDIF
  I%=0
  REPEAT
   H2%=HS%[H1%]
   HS%[H1%]=P%-ML%
   HL%[HLI% AND WLM%]=HLI%-H2%
   INC HLI%
   B%=(Q%>>PL%) AND 255
   PUSH BB%,B%:B%=SHIFT(BB%)
   HS1%=HS2%:HS2%=HS3%
   HS3%=BB%[WL%+2]
   H1%=HS1% XOR HS2% XOR HS3%
   INC P%
   INC PL%,8:IF PL%>=BIT% THEN
    INC PH%:PL%=0
    IF PH%<LEN_IN% THEN Q%=IN%[PH%] ELSE Q%=0
   ENDIF
   INC I%
  UNTIL I%>=MLL%
 WEND
 IF OL%>0 THEN PUSH OUT%,O%
 IF PROG% THEN LOCATE 0,CSRY-1:PRINT "*"*40
END

