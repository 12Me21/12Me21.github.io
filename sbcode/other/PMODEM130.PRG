OPTION STRICT
DATA "     PETIT MODEM 3DS"
DATA "2017/05/21 Ver.1.3.0"
DATA "        REI SOFTWARE"
DATA ""
'////////////////////////////////////////////
'SOFTWARE MODEM FOR PETITCOM3
'ITU-T V21  300BPS ( FSK  980/1180 1650/1850)
'ITU-T V23  600BPS ( FSK 1300/1700  390/ 450)
'ITU-T V23 1200BPS ( FSK 1300/2100  390/ 450)
'ITU-T V26 2400BPS (QPSK 1800   FSK 390/ 450)
'DUPLEX: HALF
'SYNCHRONIZE METHOD: START-STOP
'START-BIT: 1
'STOP-BIT: 1
'BINARY TRANSFER PROTOCOL: ORIGINAL
'ERROR CHECK:CRC-16(KOOPMAN)
'////////////////////////////////////////////
ACLS
VAR MICRATE%=8182
VAR OUTRATE%=16384

VAR USEPCM%=0
'IF ((EXTFEATURE AND 1)!=0) THEN USEPCM%=-1

VAR PI2#=PI()*2

VAR LPF75#[10]
LPF75#[0]=-1.9536193983005
LPF75#[1]=0.95686795136987
LPF75#[2]=0.00081213826733333
LPF75#[3]=0.0016242765346667
LPF75#[4]=0.00081213826733333
LPF75#[5]=-1.8957994781278
LPF75#[6]=0.89895188602204
LPF75#[7]=0.00078810197355611
LPF75#[8]=0.0015762039471122
LPF75#[9]=0.00078810197355611
VAR LPF150#[10]
LPF150#[0]=-1.9029811511658
LPF150#[1]=0.91569135427993
LPF150#[2]=0.0031775507785362
LPF150#[3]=0.0063551015570724
LPF150#[4]=0.0031775507785362
LPF150#[5]=-1.7959171631787
LPF150#[6]=0.80791227511467
LPF150#[7]=0.0029987779839801
LPF150#[8]=0.0059975559679603
LPF150#[9]=0.0029987779839801
VAR LPF300#[10]
LPF300#[0]=-1.7905426386411
LPF300#[1]=0.83919088986252
LPF300#[2]=0.012162062805346
LPF300#[3]=0.024324125610693
LPF300#[4]=0.012162062805346
LPF300#[5]=-1.6077290363937
LPF300#[6]=0.65141032293245
LPF300#[7]=0.010920321634696
LPF300#[8]=0.021840643269392
LPF300#[9]=0.010920321634696
VAR LPF600#[10]
LPF600#[0]=-1.5306223534164
LPF600#[1]=0.70904894927167
LPF600#[2]=0.044606648963827
LPF600#[3]=0.089213297927653
LPF600#[4]=0.044606648963827
LPF600#[5]=-1.2694533269346
LPF600#[6]=0.41743511696704
LPF600#[7]=0.036995447508098
LPF600#[8]=0.073990895016195
LPF600#[9]=0.036995447508098
VAR LPF1200#[10]
LPF1200#[0]=-0.92609060740412
LPF1200#[1]=0.53265695222249
LPF1200#[2]=0.15164158620459
LPF1200#[3]=0.30328317240919
LPF1200#[4]=0.15164158620459
LPF1200#[5]=-0.69606722960652
LPF1200#[6]=0.15197397548669
LPF1200#[7]=0.11397668646979
LPF1200#[8]=0.22795337293959
LPF1200#[9]=0.11397668646979

VAR LPF0#,LPF1#,LPF2#,LPF3#,LPF4#
VAR LPF5#,LPF6#,LPF7#,LPF8#,LPF9#

VAR RRC0#,RRC1#,RRC2#,RRC3#
VAR RRC4#,RRC5#,RRC6#,RRC7#
VAR RRC8#,RRC9#,RRC10#,RRC11#,RRC12#
RRC0# =0.176223058774915
RRC1# =0.164620405095094
RRC2# =0.133035879933417
RRC3# =0.0899807704931739
RRC4# =0.0462546035828323
RRC5# =0.0113232236850498
RRC6# =-0.00950682079114258
RRC7# =-0.0161108310890945
RRC8# =-0.0125721807468853
RRC9# =-0.00485015139397868
RRC10#=0.00179268501615718
RRC11#=0.00453866915206729
RRC12#=0.00338221767585226

DIM CRCTBL%[0]
CALC_CRCTABLE OUT CRCTBL%
DIM PCKT$[1]
DIM CC%[0]
DIM CD%[0]
DIM D%[0]
DIM ML$[0]
DIM PP%[5]
DIM PCM%[32768]
VAR PS#=0,T#=0
VAR SP%,P%,CRC%,CRCDEF%
VAR TITLE$
VAR MES$,ACTION%,BPS%,ARQ%,FQ#,ACTION$
VAR RBPS%,RMODT%,RW#,DVM#,RST#,RST2#,PL%
VAR SBPS%,SMODT%,DPH#,DPL#,DB#
VAR DRWMAX#,WAVCH1%,WAVCH2%
VAR X#,Y#
VAR K%,J%,I%,V%,B%,DU%,DU#,VV%
VAR SF$,FF$,TXTFILE$,EXT$,X%,Y%
VAR R$
VAR COL%,R8#,F%,ER#
VAR CNT%,GR1%,GR2%,GP%
VAR STCNT%
VAR CTCNT%,CTP%
VAR C1%,C2%
VAR MP%,RT#,DRW#,RBT#,RB%
VAR L%,L1%
VAR LASTP%
VAR DD%,RAG#,RL#
VAR MICS%,MICP%
VAR DS#,DC#
VAR DS0#,DS1#,DS2#,DS3#,DS4#,DS5#,DS7#
VAR DC0#,DC1#,DC2#,DC3#,DC4#,DC5#,DC7#
VAR DV#,DV0#,DV1#,DV2#,DV3#,DT#
VAR R#,DR#,BR#,DVP#
VAR RSB0#,RSB1#,RSB2#,RSB3#,RSB4#,RSB5#,RSB6#,RSB7#,RSB8#,RSB9#,RSB10#,RSB11#,RSB12#,RSB13#,RSB14#,RSB15#,RSB16#,RSB17#,RSB18#,RSB19#,RSB20#,RSB21#,RSB22#,RSB23#
VAR RCB0#,RCB1#,RCB2#,RCB3#,RCB4#,RCB5#,RCB6#,RCB7#,RCB8#,RCB9#,RCB10#,RCB11#,RCB12#,RCB13#,RCB14#,RCB15#,RCB16#,RCB17#,RCB18#,RCB19#,RCB20#,RCB21#,RCB22#,RCB23#


'CONSTANT
VAR Q1%=1
VAR Q2047#=2047
VAR Q2048%=2048
VAR Q00001#=0.0001
VAR Q80%=80

VAR QT1%=RGB(224,255,255,255)
VAR QT2%=RGB(192,255,255,255)
VAR QT3%=RGB(128,255,255,255)
VAR QORANGE%=RGB(255,160,0)
VAR QBLUEGRAY%=RGB(&H80,&H80,&HFF)


BREPEAT 0,30,2
BREPEAT 1,30,2
BREPEAT 2,30,2
BREPEAT 3,30,2
BREPEAT 4
BREPEAT 5

WHILE TRUE
 READ MES$
 IF MES$=="" THEN BREAK
 INC TITLE$," "*(50-LEN(MES$))+MES$
WEND

BGMSET 128,"P0@D-24@224O3T481C1&C1&C1&C1"
BGMSET 129,"P0@D-24@225O3T481C1&C1&C1&C1"
'BGMSET 130,"P0@D-24@226O3T481C1&C1&C1&C1"
BGMSET 131,"P0@D-24O3T60R4"
SYSBEEP=FALSE
XON MIC
XSCREEN 2,10,0

'EYE/CONSTELLATION
SPDEF   0,  0,0,128,128:SPSET   0,0
SPOFS   0,264,88,1
SPDEF   1,128,0,128,128:SPSET   1,1
SPOFS   1,264,88,1
SPDEF   2,256,0,128,128:SPSET   2,2
SPOFS   2,264,88,1
SPDEF   3,384,0,128,128:SPSET   3,3
SPOFS   3,264,88,1
'INPUT LEVEL
SPDEF   4,0,130,128,1:SPSET   4,4
SPSCALE 4,1,16
SPOFS   4,264,68,1
'PROGRESS
SPDEF   5,0,131,384,1:SPSET   5,5
SPSCALE 5,1,16
SPOFS   5,8,220,1

GPAGE 0,0:GCLS
GBOX  263, 67,392, 84,RGB(128,128,128)
GLINE 328, 67,328, 84,RGB(255,255,  0)
GLINE 370, 67,370, 84,RGB(255,  0,  0)
GBOX  263, 87,392,216,RGB(128,128,128)
GLINE 328, 87,328,216,RGB(128,128,128)
GLINE 263,152,392,152,RGB(128,128,128)
GBOX    7,219,392,236,RGB(128,128,128)

SPSHOW 0:SPSHOW 1:SPSHOW 2:SPSHOW 3
SPSHOW 4:SPSHOW 5

'////////////////////////////////////////////
@TITLE
CLS:GPAGE 0,4:GCLS
'SPHIDE 0:SPHIDE 1:SPHIDE 2:SPHIDE 3
BGMSTOP:MICSTOP
IF EXTFEATURE AND 1 THEN PCMSTOP
PRINTTITLE
PRINT "SELECT ACTION"

ML$=NEWARRAY$(0)
PUSH ML$,"RECEIVE FILE SIMPLEX"
PUSH ML$,"RECEIVE FILE w/ ARQ"
PUSH ML$,"SEND FILE    SIMPLEX"
PUSH ML$,"SEND FILE    w/ ARQ"
PUSH ML$,"TEST SOUND"

ACTION%=SELECT(ML$,"")
IF ACTION%<0 THEN GOTO @TITLE
IF ACTION%==0 THEN ACTION$="RECEIVE SIMPLEX"
IF ACTION%==1 THEN ACTION$="RECEIVE w/ARQ"
IF ACTION%==2 THEN ACTION$="SEND SIMPLEX"
IF ACTION%==3 THEN ACTION$="SEND w/ARQ"
IF ACTION%==4 THEN GOTO @TESTSOUND

@SELECT_SPEED
PRINTTITLE
PRINT ACTION$
PRINT ""
PRINT "SELECT SPEED"

ML$=NEWARRAY$(0)
PUSH ML$," 300BPS"
PUSH ML$," 600BPS"
PUSH ML$,"1200BPS"
PUSH ML$,"2400BPS"

I%=SELECT(ML$,"")
IF I%<0 THEN GOTO @TITLE
IF I%==0 THEN BPS%=300
IF I%==1 THEN BPS%=600
IF I%==2 THEN BPS%=1200
IF I%==3 THEN BPS%=2400

'RECEIVE SIMPLEX
IF ACTION%==0 THEN
 IF BPS%==300 THEN
  RBPS%=300:RMODT%=0
  RW#=PI2#*1080/MICRATE%
  SET_LPF LPF150#
  DVM#=SIN(PI2#*100/MICRATE%)
  RST#=MICRATE%/300
  RST2#=RST#/2
  PL%=53
 ELSEIF BPS%==600 THEN
  RBPS%=600:RMODT%=0
  RW#=PI2#*1500/MICRATE%
  SET_LPF LPF300#
  DVM#=SIN(PI2#*200/MICRATE%)
  RST#=MICRATE%/600
  RST2#=RST#/2
  PL%=112
 ELSEIF BPS%==1200 THEN
  RBPS%=1200:RMODT%=0
  RW#=PI2#*1700/MICRATE%
  SET_LPF LPF600#
  DVM#=SIN(PI2#*400/MICRATE%)
  RST#=MICRATE%/1200
  RST2#=RST#/2
  PL%=229
 ELSEIF BPS%==2400 THEN
  RBPS%=2400:RMODT%=1
  RW#=PI2#*1800/MICRATE%
  DRWMAX#=PI2#*7/MICRATE%
  RST#=MICRATE%/1200
  RST2#=RST#/2
  PL%=460
 ELSE
  STOP
 ENDIF
 ARQ%=0
 GOTO @RECEIVE_SIMPLEX
ENDIF
'RECEIVE W/ARQ
IF ACTION%==1 THEN
 IF BPS%==300 THEN
  RBPS%=300:RMODT%=0
  RW#=PI2#*1080/MICRATE%
  SET_LPF LPF150#
  DVM#=SIN(PI2#*100/MICRATE%)
  RST#=MICRATE%/300
  RST2#=RST#/2
  PL%=53
  
  SBPS%=300:SMODT%=0
  DB#=OUTRATE%/2/300
  DPH#=PI2#*1650/OUTRATE%*2
  DPL#=PI2#*1850/OUTRATE%*2
  BGMSET 130,"P0@D-24@226O3T481C1&C192"
 ELSEIF BPS%==600 THEN
  RBPS%=600:RMODT%=0
  RW#=PI2#*1500/MICRATE%
  SET_LPF LPF300#
  DVM#=SIN(PI2#*200/MICRATE%)
  RST#=MICRATE%/600
  RST2#=RST#/2
  PL%=112
  
  SBPS%=75:SMODT%=0
  DB#=OUTRATE%/2/75
  DPH#=PI2#*390/OUTRATE%*2
  DPL#=PI2#*450/OUTRATE%*2
  BGMSET 130,"P0@D-24@226O3T481C1&C1&C1&C1&C48"
 ELSEIF BPS%==1200 THEN
  RBPS%=1200:RMODT%=0
  RW#=PI2#*1700/MICRATE%
  SET_LPF LPF600#
  DVM#=SIN(PI2#*400/MICRATE%)
  RST#=MICRATE%/1200
  RST2#=RST#/2
  PL%=229
  
  SBPS%=75:SMODT%=0
  DB#=OUTRATE%/2/75
  DPH#=PI2#*390/OUTRATE%*2
  DPL#=PI2#*450/OUTRATE%*2
  BGMSET 130,"P0@D-24@226O3T481C1&C1&C1&C1&C48"
 ELSEIF BPS%==2400 THEN
  RBPS%=2400:RMODT%=1
  RW#=PI2#*1800/MICRATE%
  DRWMAX#=PI2#*7/MICRATE%
  RST#=MICRATE%/1200
  RST2#=RST#/2
  PL%=460
  
  SBPS%=75:SMODT%=0
  DB#=OUTRATE%/2/75
  DPH#=PI2#*390/OUTRATE%*2
  DPL#=PI2#*450/OUTRATE%*2
  BGMSET 130,"P0@D-24@226O3T481C1&C1&C1&C1&C48"
 ELSE
  STOP
 ENDIF
 ARQ%=1
 GOTO @RECEIVE_ARQ
ENDIF
'SEND SIMPLEX
IF ACTION%==2 THEN
 IF BPS%==300 THEN
  SBPS%=300:SMODT%=0
  DB#=OUTRATE%/2/300
  DPH#=PI2#*980/OUTRATE%*2
  DPL#=PI2#*1180/OUTRATE%*2
  PL%=53
 ELSEIF BPS%==600 THEN
  SBPS%=600:SMODT%=0
  DB#=OUTRATE%/2/600
  DPH#=PI2#*1300/OUTRATE%*2
  DPL#=PI2#*1700/OUTRATE%*2
  PL%=112
 ELSEIF BPS%==1200 THEN
  SBPS%=1200:SMODT%=0
  DB#=OUTRATE%/2/1200
  DPH#=PI2#*1300/OUTRATE%*2
  DPL#=PI2#*2100/OUTRATE%*2
  PL%=229
 ELSEIF BPS%==2400 THEN
  SBPS%=2400:SMODT%=1
  DB#=OUTRATE%/2/1200
  DPH#=PI2#*1800/OUTRATE%*2
  PL%=460
 ELSE
  STOP
 ENDIF
 ARQ%=0
 GOTO @SEND
ENDIF
'SEND W/ARQ
IF ACTION%==3 THEN
 IF BPS%==300 THEN
  RBPS%=300:RMODT%=0
  RW#=PI2#*1750/MICRATE%
  SET_LPF LPF150#
  DVM#=SIN(PI2#*100/MICRATE%)
  RST#=MICRATE%/300
  RST2#=RST#/2
  
  SBPS%=300:SMODT%=0
  DB#=OUTRATE%/2/300
  DPH#=PI2#*980/OUTRATE%*2
  DPL#=PI2#*1180/OUTRATE%*2
  PL%=53
 ELSEIF BPS%==600 THEN
  RBPS%=75:RMODT%=0
  RW#=PI2#*420/MICRATE%
  SET_LPF LPF75#
  DVM#=SIN(PI2#*30/MICRATE%)
  RST#=MICRATE%/75
  RST2#=RST#/2
  
  SBPS%=600:SMODT%=0
  DB#=OUTRATE%/2/600
  DPH#=PI2#*1300/OUTRATE%*2
  DPL#=PI2#*1700/OUTRATE%*2
  PL%=112
 ELSEIF BPS%==1200 THEN
  RBPS%=75:RMODT%=0
  RW#=PI2#*420/MICRATE%
  SET_LPF LPF75#
  DVM#=SIN(PI2#*30/MICRATE%)
  RST#=MICRATE%/75
  RST2#=RST#/2
  
  SBPS%=1200:SMODT%=0
  DB#=OUTRATE%/2/1200
  DPH#=PI2#*1300/OUTRATE%*2
  DPL#=PI2#*2100/OUTRATE%*2
  PL%=229
 ELSEIF BPS%==2400 THEN
  RBPS%=75:RMODT%=0
  RW#=PI2#*420/MICRATE%
  SET_LPF LPF75#
  DVM#=SIN(PI2#*30/MICRATE%)
  RST#=MICRATE%/75
  RST2#=RST#/2
  
  SBPS%=2400:SMODT%=1
  DB#=OUTRATE%/2/1200
  DPH#=PI2#*1800/OUTRATE%*2
  PL%=460
 ELSE
  STOP
 ENDIF
 ARQ%=1
 GOTO @SEND
ENDIF
GOTO @TITLE

'////////////////////////////////////////////
@TESTSOUND
PRINTTITLE
PRINT "SELECT FREQUENCY"
ML$=NEWARRAY$(0)
PUSH ML$," 390"
PUSH ML$," 450"
PUSH ML$," 980"
PUSH ML$,"1180"
PUSH ML$,"1300"
PUSH ML$,"1650"
PUSH ML$,"1700"
PUSH ML$,"1800"
PUSH ML$,"1850"
PUSH ML$,"2100"

I%=SELECT(ML$,"")
IF I%<0 THEN GOTO @TITLE
FQ#=VAL(ML$[I%])

@TESTSOUND1
PRINTTITLE
PRINT "PLAYING TEST SOUND @ "+STR$(FQ#)+"..."
PRINT "PRESS B TO CANCEL"
PRINT ""

PRINT STR$(FQ#)+"Hz"
MODULATE_TONE FQ# OUT D%

WAVCH1%=0:WAVCH2%=1
IF USEPCM% THEN
 COPY PCM%,0,D%
 COPY PCM%,16384,D%
 PCMSTREAM PCM%,8182
 WHILE TRUE
  WHILE (PCMPOS-16384)*(1-WAVCH1%*2)>0
   VSYNC 1:B%=BUTTON(1)
   IF B% AND #B THEN PCMSTOP:GOTO @TESTSOUND
   IF B% AND #UP   THEN FQ#=FQ#+0.1:GOTO @TESTSOUND1
   IF B% AND #DOWN THEN FQ#=FQ#-0.1:GOTO @TESTSOUND1
  WEND
  SWAP WAVCH1%,WAVCH2%
 WEND
ELSE
 WAVSETA 224,127,127,127,127,D%
 WAVSETA 225,127,127,127,127,D%
 BGMPLAY WAVCH1%,128+WAVCH1%,127
 WHILE TRUE
  WHILE BGMCHK(WAVCH1%)
   VSYNC 1:B%=BUTTON(1)
   IF B% AND #B THEN BGMSTOP:GOTO @TESTSOUND
   IF B% AND #UP   THEN FQ#=FQ#+0.1:GOTO @TESTSOUND1
   IF B% AND #DOWN THEN FQ#=FQ#-0.1:GOTO @TESTSOUND1
  WEND
  SWAP WAVCH1%,WAVCH2%
  BGMPLAY WAVCH1%,128+WAVCH1%,127
 WEND
ENDIF


'////////////////////////////////////////////
@SEND
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT ""
PRINT "SELECT FILE"

DIM FL$[0]
FILES FL$
I%=SELECT(FL$,"NO FILE")
IF I%<0 THEN GOTO @SELECT_SPEED

SF$=FL$[I%]
FF$=MID$(SF$,1,LEN(SF$)-1)
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+SF$
PRINT ""
PRINT "LOADING..."

'FILE LOAD
IF LEFT$(SF$,1)=="*" THEN
 CC%=LOAD_TXT%(FF$)
ELSEIF GETEXT$(FF$)==".GRP" THEN
 CC%=LOAD_GRP%(FF$)
ELSE
 CC%=LOAD_DAT%(FF$)
ENDIF

IF ARQ%!=0 GOTO @SEND_ARQ

@SEND_RANGE
IF USEPCM% THEN PCMSTOP ELSE BGMSTOP
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT ""
PRINT "INPUT START PACKET NUMBER"
L%=(LEN(CC%)+PL%-1)/PL%
PRINT "(FROM 0 TO "+STR$(L%)+")"
PRINT ""
SP%=SELECTNUM(0,L%)
IF SP%<0 THEN @SEND

PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT "FROM:"+STR$(SP%)
PRINT ""
PRINT "PRESS A/UP TO START
PRINT "PRESS B TO CANCEL"
WHILE TRUE
 B%=BUTTON(1)
 IF B%==#A || B%==#UP THEN BREAK
 IF B%==#B GOTO @SEND_RANGE
 VSYNC 1
WEND

PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT "FROM:"+STR$(SP%)
PRINT ""

GLINE 0,131,384,131,0
WAVCH1%=1:WAVCH2%=0:P%=0
MODULATE_INIT

'SEND FILE INFO 3 TIMES
GOSUB @SEND_SETPACKET
IF LEN(D%)<OUTRATE% THEN @TITLE
SWAP WAVCH1%,WAVCH2%
IF USEPCM% THEN
 PCMSTREAM PCM%,8182
ELSE
 STCNT%=MAINCNT+1
 WHILE MAINCNT<STCNT%:WEND
 STCNT%=STCNT%+121
 BGMPLAY WAVCH1%,128+WAVCH1%,127
ENDIF
FOR I%=0 TO 1
 GOSUB @SEND_SETPACKET
 IF LEN(D%)<OUTRATE% THEN @SEND_RANGE
 IF WAITPLAY(1)<0 THEN GOTO @SEND_RANGE
 SWAP WAVCH1%,WAVCH2%
NEXT
IF SP%==0 THEN P%=0 ELSE P%=SP%-1
REPEAT
 'SEND FILE CONTENTS
 INC P%
 GOSUB @SEND_SETPACKET
 IF LEN(D%)<OUTRATE% THEN @SEND_RANGE
 IF WAITPLAY(1)<0 THEN GOTO @SEND_RANGE
 SWAP WAVCH1%,WAVCH2%
 'PROGRESS INDICATOR
 GR1%=384*(P%-1)/((LEN(CC%)+PL%-1) DIV PL%)
 GR2%=384* P%   /((LEN(CC%)+PL%-1) DIV PL%)
 GLINE GR1%,131,GR2%,131,#BLUE
UNTIL P%*PL%>=LEN(CC%)
IF WAITPLAY(0)<0 THEN GOTO @SEND_RANGE
IF USEPCM% THEN
 SWAP WAVCH1%,WAVCH2%
 GOSUB @SEND_NULLPACKET
 CNT%=MAINCNT+30
 WHILE MAINCNT<CNT%:VSYNC:WEND
 PCMSTOP
ENDIF

@S_FIN
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT "FROM:"+STR$(P%)
PRINT ""
PRINT "SENDING:DONE"
PRINT ""
PRINT "PRESS A/UP TO RE-SEND"
PRINT "PRESS B TO EXIT"
WHILE TRUE
 B%=BUTTON(1)
 IF B%==#A || B%==#UP THEN BREAK
 IF B%==#B GOTO @TITLE
 VSYNC 1
WEND
GOTO @SEND_RANGE

'////////////////////////////////////////////
@SEND_ARQ
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT ""
PRINT "SENDING:..."

GLINE 0,131,384,131,0
'GET CRCDEF%
CREATE_INFO_PACKET LEN(CC%),FF$,PL% OUT CRCDEF%,CD%

REPEAT
 'WAIT REQUEST PACKET
 GOSUB @DEMODULATION_START
 REPEAT
  GOSUB @DEMODULATION
  IF RB%<0 THEN @TITLE
  GOSUB @REQ_PACKET_DETECTION
  IF LEN(PP%)>0 THEN BREAK
 UNTIL FALSE
 MICSTOP
 'DETECT FIN
 IF LEN(PP%)==1 THEN
  IF (PP%[0]-1)*PL%>=LEN(CC%) THEN BREAK
 ENDIF
 'INIT
 MODULATE_INIT
 WAVCH1%=1:WAVCH2%=0
 'RESPOND DATA
 P%=SHIFT(PP%)
 GOSUB @SEND_SETPACKET
 IF LEN(D%)<OUTRATE% THEN @SEND_RANGE
 SWAP WAVCH1%,WAVCH2%
 IF USEPCM% THEN
  PCMSTREAM PCM%,8182
 ELSE
  STCNT%=MAINCNT+1
  WHILE MAINCNT<STCNT%:WEND
  STCNT%=STCNT%+121
  BGMPLAY WAVCH1%,128+WAVCH1%,127
 ENDIF
 'PROGRESS INDICATOR
 GR1%=384*(P%-1)/((LEN(CC%)+PL%-1) DIV PL%)
 GR2%=384* P%   /((LEN(CC%)+PL%-1) DIV PL%)
 GLINE GR1%,131,GR2%,131,#BLUE
 WHILE LEN(PP%)>0
  P%=SHIFT(PP%)
  IF (P%-1)*PL%>=LEN(CC%) THEN CONTINUE
  GOSUB @SEND_SETPACKET
  IF LEN(D%)<OUTRATE% THEN @TITLE
  IF WAITPLAY(1)<0 THEN GOTO @TITLE
  SWAP WAVCH1%,WAVCH2%
  'PROGRESS INDICATOR
  GR1%=384*(P%-1)/((LEN(CC%)+PL%-1) DIV PL%)
  GR2%=384* P%   /((LEN(CC%)+PL%-1) DIV PL%)
  GLINE GR1%,131,GR2%,131,#BLUE
 WEND
 IF WAITPLAY(0)<0 THEN GOTO @TITLE
 IF USEPCM% THEN
  SWAP WAVCH1%,WAVCH2%
  GOSUB @SEND_NULLPACKET
  CNT%=MAINCNT+30
  WHILE MAINCNT<CNT%:VSYNC:WEND
  PCMSTOP
 ENDIF
UNTIL FALSE

PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT "FILENAME:"+FF$
PRINT "FILESIZE:"+STR$(LEN(CC%))
PRINT ""
PRINT "SENDING:DONE"
PRINT ""
PRINT "PRESS B TO EXIT"
WHILE TRUE
 B%=BUTTON(1)
 IF B%==#B GOTO @TITLE
 VSYNC 1
WEND

@SEND_SETPACKET
IF P%==0 THEN
 'FILE INFO
 CREATE_INFO_PACKET LEN(CC%),FF$,PL% OUT CRCDEF%,CD%
 LOCATE ,CSRY-1:PRINT " "*50
 LOCATE ,CSRY-1:PRINT "SENDING:";
 PRINT "FILE INFO"
ELSE
 'FILE CONTENTS
 CREATE_DATA_PACKET P%,CC%,CRCDEF%,PL% OUT CD%
 LOCATE ,CSRY-1:PRINT " "*50
 LOCATE ,CSRY-1:PRINT "SENDING:";
 PRINT STR$((P%-1)*PL%)+"/"+STR$(LEN(CC%))
ENDIF
MODULATE CD%,DPH#,DPL#,DB# OUT D%
IF LEN(D%)<OUTRATE% THEN RETURN
IF USEPCM% THEN
 COPY PCM%,(WAVCH2%<<14),D%
ELSE
 WAVSETA 224+WAVCH2%,127,127,127,127,D%
ENDIF
RETURN

@SEND_NULLPACKET
D%=NEWARRAY%(16384)
IF USEPCM% THEN
 COPY PCM%,(WAVCH2%<<14),D%
ELSE
 WAVSETA 224+WAVCH2%,127,127,127,127,D%
ENDIF
RETURN

'////////////////////////////////////////////
'RECEIVE SIMPLEX
@RECEIVE_SIMPLEX
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT ""
PRINT "PRESS B TO CANCEL"

L%=-1:L1%=0:CRCDEF%=&HFFFF
GOSUB @DEMODULATION_START
REPEAT
 GOSUB @DEMODULATION
 IF RB%<0 THEN @TITLE
 GOSUB @PACKET_DETECTION
 IF P%>0 && L%<0 GOTO @R_ERR1
UNTIL L%>=0 && L1%>=L%
MICSTOP
GOTO @SAVE_DATA

'////////////////////////////////////////////
'RECEIVE WITH ARQ
@RECEIVE_ARQ
PRINTTITLE
PRINT ACTION$+" @ "+STR$(BPS%)
PRINT ""
PRINT "PRESS B TO CANCEL"

C1%=0:C2%=0
L%=-1:L1%=0
CRCDEF%=&HFFFF
P%=0

PCKT$=NEWARRAY$(0)
REPEAT
 'REQUEST
 MODULATE_INIT
 CREATE_REQ_PKT PCKT$ OUT CD%,LASTP%
 MODULATE CD%,DPH#,DPL#,DB# OUT D%
 IF USEPCM% THEN
  COPY PCM%,0,D%
  FILL PCM%,0,16384,
  PCMSTREAM PCM%,8182
  WHILE PCMPOS<16384
   VSYNC 1
   IF BUTTON(1) AND #B GOTO @TITLE
  WEND
  PCMSTOP
 ELSE
  STCNT%=MAINCNT+1
  WHILE MAINCNT<STCNT%:WEND
  STCNT%=STCNT%+121
  WAVSETA 226,127,127,127,127,D%
  BGMPLAY 0,130,127
  WHILE BGMCHK(0)
   VSYNC 1:B%=BUTTON(1)
   IF B% AND #B GOTO @TITLE
  WEND
 ENDIF
 
 CD%=NEWARRAY%(0)
 STCNT%=MAINCNT+600
 GOSUB @DEMODULATION_START
 REPEAT
  GOSUB @DEMODULATION
  IF RB%<0 THEN @TITLE
  GOSUB @PACKET_DETECTION
  IF P%>=0 THEN
   IF L1%>=L% && L%>=0 GOTO @RA_FIN
   IF P%==LASTP% THEN BREAK
   STCNT%=MAINCNT+600
  ENDIF
 UNTIL MAINCNT>STCNT%
 MICSTOP
UNTIL FALSE

@RA_FIN
'REQUEST FINAL PACKET
MODULATE_INIT
CREATE_REQ_PKT PCKT$ OUT CD%,LASTP%
MODULATE CD%,DPH#,DPL#,DB# OUT D%
IF USEPCM% THEN
 COPY PCM%,0,D%
 FILL PCM%,0,16384,
 PCMSTREAM PCM%,8182
 WHILE PCMPOS<16384
  VSYNC 1
  IF BUTTON(1) AND #B THEN GOTO @TITLE
 WEND
 PCMSTOP
ELSE
 STCNT%=MAINCNT+1
 WHILE MAINCNT<STCNT%:WEND
 STCNT%=STCNT%+121
 WAVSETA 226,127,127,127,127,D%
 BGMPLAY 0,130,127
 WHILE BGMCHK(0)
  VSYNC 1:B%=BUTTON(1)
  IF B% AND #B GOTO @TITLE
 WEND
ENDIF

GOTO @SAVE_DATA

'////////////////////////////////////////////
'SAVE RECEIVED DATA TO FILE
@SAVE_DATA

EXT$=TOUPPER(GETEXT$(FF$))
IF EXT$==".GRP" THEN
 SAVE_GRP FF$,PCKT$
ELSEIF EXT$==".TXT" || EXT$==".PRG" THEN
 SAVE_TXT FF$,PCKT$
ELSE
 SAVE_DAT FF$,PCKT$
ENDIF

GOTO @TITLE

@R_ERR1
COLOR 3:PRINT "START BLOCK ERROR"
@R_E1
B%=BUTTON(1)
IF B% AND #B GOTO @TITLE
GOTO @R_E1

'////////////////////////////////////////////
'DEMODULATION
'MP mic position received
'RT time * angle speed
'RW omega
'RST symbol time [/micrate sec]
@DEMODULATION_START
RL#=0:C1%=0:C2%=0
RBT#=0:RT#=0:MP%=-1:DRW#=0
CTCNT%=0
DV0#=0:DV1#=0:DV2#=0:DV3#=0
DC0#=0:DC1#=0:DC2#=0:DC3#=0
DC4#=0:DC5#=0:DC7#=0
DS0#=0:DS1#=0:DS2#=0:DS3#=0
DS4#=0:DS5#=0:DS7#=0
RSB0#=0:RSB1#=0:RSB2#=0:RSB3#=0:RSB4#=0
RSB5#=0:RSB6#=0:RSB7#=0:RSB8#=0:RSB9#=0
RSB10#=0:RSB11#=0:RSB12#=0:RSB13#=0:RSB14#=0
RSB15#=0:RSB16#=0:RSB17#=0:RSB18#=0:RSB19#=0
RSB20#=0:RSB21#=0:RSB22#=0:RSB23#=0
RCB0#=0:RCB1#=0:RCB2#=0:RCB3#=0:RCB4#=0
RCB5#=0:RCB6#=0:RCB7#=0:RCB8#=0:RCB9#=0
RCB10#=0:RCB11#=0:RCB12#=0:RCB13#=0:RCB14#=0
RCB15#=0:RCB16#=0:RCB17#=0:RCB18#=0:RCB19#=0
RCB20#=0:RCB21#=0:RCB22#=0:RCB23#=0
MICSTART 0,3,0
MICS%=MICSIZE
RETURN

@DEMODULATION
RB%=-1
IF RMODT%==0 THEN
'////////////////////////////////////////////
'FSK
'////////////////////////////////////////////
 REPEAT
  MP%=MP%+1:IF MP%>=MICS% THEN MP%=0
  REPEAT:MICP%=MICPOS:UNTIL MP%!=MICP%
  DD%=MICDATA(MP%)
  'LEVEL DETECTOR
  RL#=(RL#*Q2047#+(DD%*DD%>>21))/Q2048%
  IF RL#>255 THEN RL#=255
  'LEVEL INDICATOR
  IF (MP% AND 511)==0 THEN
   GP%=LOG(RL#+1,2)*16 '*128/8
   GLINE     0,130,GP%,130,#RED
   GLINE GP%+1,130,127,130,0
   'LOCATE 0,10:?STR$(MICPOS-MP%,4),RT#
  ENDIF
  RT#=RT#+RW#
  COL%=#RED
  'DS#=DD%*SIN(RT#)
  'DC#=DD%*COS(RT#)

  DC0#=DD%*COS(RT#)-LPF0#*DC1#-LPF1#*DC2#
  DC#=LPF2#*DC0#+LPF3#*DC1#+LPF4#*DC2#
  DC5#=DC4#:DC4#=DC3#
  DC3#=DC#-LPF5#*DC4#-LPF6#*DC5#
  DC#=LPF7#*DC3#+LPF8#*DC4#+LPF9#*DC5#
  DC2#=DC1#:DC1#=DC0#

  DS0#=DD%*SIN(RT#)-LPF0#*DS1#-LPF1#*DS2#
  DS#=LPF2#*DS0#+LPF3#*DS1#+LPF4#*DS2#
  DS5#=DS4#:DS4#=DS3#
  DS3#=DS#-LPF5#*DS4#-LPF6#*DS5#
  DS#=LPF7#*DS3#+LPF8#*DS4#+LPF9#*DS5#
  DS2#=DS1#:DS1#=DS0#

  DV#=SQR(DC#*DC#+DS#*DS#+Q00001#)
  DS#=DS#/DV#:DC#=DC#/DV#
  DV#=(DC#*DS7#-DS#*DC7#)
  DS7#=DS#:DC7#=DC#
  
  IF RBT#<RST2# THEN
   RBT#=RBT#+Q1%
   IF RBT#>RST2# THEN
    '1/2 SAMPLE
    IF RT#>63 THEN RT#=RT#-PI2#*10
    IF BUTTON(1) AND #B THEN RETURN
    'FOR GARDNER
    DV1#=DV#+(DV0#-DV#)*(RBT#-RST2#)
    COL%=QORANGE%
   ENDIF
  ELSE
   RBT#=RBT#+Q1%
   IF RBT#>=RST# THEN
    'GARDNER
    DV3#=DV#+(DV0#-DV#)*(RBT#-RST#)
    DT#=DV1#*(DV3#-DV2#)*RST2#
    IF DT#> RST2# THEN DT#= RST2#
    IF DT#<-RST2# THEN DT#=-RST2#
    RBT#=RBT#+DT#
    DV2#=DV3#
    'SAMPLE
    IF C2%==0 THEN
     IF DV3#>0 THEN C2%=1:V%=0
    ELSEIF C2%<256 THEN
     IF DV3#<0 THEN V%=V%+C2%
     C2%=C2%<<1
    ELSEIF C2%>=256 THEN
     IF DV3#<0 THEN RB%=V%:C2%=0
    ENDIF
    RBT#=RBT#-RST#
    COL%=#YELLOW
   ENDIF
  ENDIF
  
  'EYE DIAGRAM
  IF MICP%-MP%<100 THEN
   CTCNT%=CTCNT%+1
   IF CTCNT%>=64 THEN
    CTCNT%=0:CTP%=CTP%+1
    IF CTP%>=4 THEN CTP%=0
    GFILL CTP%*128,0,CTP%*128+127,127,0
    SPCOLOR CTP%,#WHITE
    SPCOLOR (CTP%+3)MOD 4,QT1%
    SPCOLOR (CTP%+2)MOD 4,QT2%
    SPCOLOR (CTP%+1)MOD 4,QT3%
   ENDIF
   X%=RBT#/RST#*64+64
   IF X%>96 THEN X%=X%-64
   Y%=DV#/DVM#*32+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,COL%
  ENDIF
  DV0#=DV#
 UNTIL RB%>=0
 
ELSEIF RMODT%==1 THEN
'////////////////////////////////////////////
'DQPSK
'////////////////////////////////////////////
 REPEAT

'IF MICPOS>20000 THEN
' LOCATE 0,10:?MP%,MICPOS
' STOP
'ENDIF
  COL%=1
  MP%=MP%+1:IF MP%>=MICS% THEN MP%=0
  REPEAT:MICP%=MICPOS:UNTIL MP%!=MICP%
  DD%=MICDATA(MP%)
  'LEVEL DETECTOR
  RL#=(RL#*Q2047#+(DD%*DD%>>21))/Q2048%
  IF RL#>255 THEN RL#=255
  'LEVEL INDICATOR
  IF (MP% AND 511)==0 THEN
   GP%=LOG(RL#+1,2)*16 '*128/8
   GLINE     0,130,GP%,130,#RED
   GLINE GP%+1,130,127,130,0
'   LOCATE 0,10:?STR$(MICPOS-MP%,4),RT#,DRW#
  ENDIF
  RT#=RT#+RW#+DRW#
  RAG#=DD%/SQR(RL#+Q1%)/2048
  DS#=RAG#*SIN(RT#):DC#=RAG#*COS(RT#)
  IF RBT#<RST2# THEN
   RBT#=RBT#+Q1%
   IF RBT#>=RST2# THEN
    IF RT#>63 THEN RT#=RT#-PI2#*10
    IF BUTTON(1) AND #B THEN RETURN
    DS0#=RSB0#*RRC12#+RSB1#*RRC11#+RSB2#*RRC10#+RSB3#*RRC9#+RSB4#*RRC8#+RSB5#*RRC7#+RSB6#*RRC6#+RSB7#*RRC5#+RSB8#*RRC4#+RSB9#*RRC3#+RSB10#*RRC2#+RSB11#*RRC1#+RSB12#*RRC0#+RSB13#*RRC1#+RSB14#*RRC2#+RSB15#*RRC3#+RSB16#*RRC4#+RSB17#*RRC5#+RSB18#*RRC6#+RSB19#*RRC7#+RSB20#*RRC8#+RSB21#*RRC9#+RSB22#*RRC10#+RSB23#*RRC11#+DS#*RRC12#
    DC0#=RCB0#*RRC12#+RCB1#*RRC11#+RCB2#*RRC10#+RCB3#*RRC9#+RCB4#*RRC8#+RCB5#*RRC7#+RCB6#*RRC6#+RCB7#*RRC5#+RCB8#*RRC4#+RCB9#*RRC3#+RCB10#*RRC2#+RCB11#*RRC1#+RCB12#*RRC0#+RCB13#*RRC1#+RCB14#*RRC2#+RCB15#*RRC3#+RCB16#*RRC4#+RCB17#*RRC5#+RCB18#*RRC6#+RCB19#*RRC7#+RCB20#*RRC8#+RCB21#*RRC9#+RCB22#*RRC10#+RCB23#*RRC11#+DC#*RRC12#
    DS1#=DS0#:DC1#=DC0#

   X%=DC0#*80+64
   IF X%>127 THEN X%=127
   IF X%<0 THEN X%=0
   Y%=DS0#*80+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,#CYAN
   COL%=0

   ENDIF
  ELSE
   RBT#=RBT#+Q1%
   IF RBT#>=RST# THEN
    DS0#=RSB0#*RRC12#+RSB1#*RRC11#+RSB2#*RRC10#+RSB3#*RRC9#+RSB4#*RRC8#+RSB5#*RRC7#+RSB6#*RRC6#+RSB7#*RRC5#+RSB8#*RRC4#+RSB9#*RRC3#+RSB10#*RRC2#+RSB11#*RRC1#+RSB12#*RRC0#+RSB13#*RRC1#+RSB14#*RRC2#+RSB15#*RRC3#+RSB16#*RRC4#+RSB17#*RRC5#+RSB18#*RRC6#+RSB19#*RRC7#+RSB20#*RRC8#+RSB21#*RRC9#+RSB22#*RRC10#+RSB23#*RRC11#+DS#*RRC12#
    DC0#=RCB0#*RRC12#+RCB1#*RRC11#+RCB2#*RRC10#+RCB3#*RRC9#+RCB4#*RRC8#+RCB5#*RRC7#+RCB6#*RRC6#+RCB7#*RRC5#+RCB8#*RRC4#+RCB9#*RRC3#+RCB10#*RRC2#+RCB11#*RRC1#+RCB12#*RRC0#+RCB13#*RRC1#+RCB14#*RRC2#+RCB15#*RRC3#+RCB16#*RRC4#+RCB17#*RRC5#+RCB18#*RRC6#+RCB19#*RRC7#+RCB20#*RRC8#+RCB21#*RRC9#+RCB22#*RRC10#+RCB23#*RRC11#+DC#*RRC12#
    RBT#=RBT#+(DS1#*(DS0#-DS3#)+DC1#*(DC0#-DC3#))*RST#/80-RST#
    R#=ATAN(DS0#,DC0#)/PI2#
    DR#=R#-BR#:BR#=R#
    DC3#=DC0#:DS3#=DS0#
    IF DR#<0 THEN DR#=DR#+1
    IF DR#<0.25 THEN
     C1%=0:ER#=DR#-0.125
    ELSEIF DR#<0.5 THEN
     C1%=2:ER#=DR#-0.375
    ELSEIF DR#<0.75 THEN
     C1%=3:ER#=DR#-0.625
    ELSE
     C1%=1:ER#=DR#-0.875
    ENDIF
    
    IF C2%==0 THEN
     IF (C1% AND 1)==0 THEN
      C2%=1:V%=(C1%>>1):F%=1
     ENDIF
    ELSEIF C2%<7 THEN
     V%=V%+(C1%<<C2%)
     C2%=C2%+2:F%=1
    ELSEIF C2%>=7 THEN
     IF (C1% AND 2)==2 THEN
      RB%=V%+((C1% AND 1)<<7)
      C2%=0:F%=1
     ENDIF
    ENDIF
    IF F% THEN
     R8#=(R#+1)*8
     WHILE R8#>0.5:R8#=R8#-1:WEND
DRW#=DRW#-(ER#*10+R8#/1000)*PI2#/MICRATE%
     IF DRW#> DRWMAX# THEN DRW#= DRWMAX#
     IF DRW#<-DRWMAX# THEN DRW#=-DRWMAX#

   X%=DC0#*80+64
   IF X%>127 THEN X%=127
   IF X%<0 THEN X%=0
   Y%=DS0#*80+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,#WHITE
   COL%=0

    ENDIF
   ENDIF
  ENDIF
  
'////////////////////////////////////////////
  MP%=MP%+1:IF MP%>=MICS% THEN MP%=0
  REPEAT:MICP%=MICPOS:UNTIL MP%!=MICP%
  'WHILE MP%==MICPOS:WEND
  DD%=MICDATA(MP%)
  'LEVEL DETECTOR
  RL#=(RL#*Q2047#+(DD%*DD%>>21))/Q2048%
  IF RL#>255 THEN RL#=255
  'LEVEL INDICATOR
  'IF (MP% AND 511)==0 THEN
  ' GP%=LOG(RL#+1,2)*16 '*128/8
  ' GLINE     0,130,GP%,130,#RED
  ' GLINE GP%+1,130,127,130,0
  ' LOCATE 0,10:?STR$(MICPOS-MP%,4),RT#
  'ENDIF
  RT#=RT#+RW#+DRW#
  RAG#=DD%/SQR(RL#+Q1%)/2048
  DS4#=RAG#*SIN(RT#):DC4#=RAG#*COS(RT#)
  IF RBT#<RST2# THEN
   RBT#=RBT#+Q1%
   IF RBT#>=RST2# THEN
    IF RT#>63 THEN RT#=RT#-PI2#*10
    IF BUTTON(1) AND #B THEN RETURN
    DS0#=RSB1#*RRC12#+RSB2#*RRC11#+RSB3#*RRC10#+RSB4#*RRC9#+RSB5#*RRC8#+RSB6#*RRC7#+RSB7#*RRC6#+RSB8#*RRC5#+RSB9#*RRC4#+RSB10#*RRC3#+RSB11#*RRC2#+RSB12#*RRC1#+RSB13#*RRC0#+RSB14#*RRC1#+RSB15#*RRC2#+RSB16#*RRC3#+RSB17#*RRC4#+RSB18#*RRC5#+RSB19#*RRC6#+RSB20#*RRC7#+RSB21#*RRC8#+RSB22#*RRC9#+RSB23#*RRC10#+DS#*RRC11#+DS4#*RRC12#
    DC0#=RCB1#*RRC12#+RCB2#*RRC11#+RCB3#*RRC10#+RCB4#*RRC9#+RCB5#*RRC8#+RCB6#*RRC7#+RCB7#*RRC6#+RCB8#*RRC5#+RCB9#*RRC4#+RCB10#*RRC3#+RCB11#*RRC2#+RCB12#*RRC1#+RCB13#*RRC0#+RCB14#*RRC1#+RCB15#*RRC2#+RCB16#*RRC3#+RCB17#*RRC4#+RCB18#*RRC5#+RCB19#*RRC6#+RCB20#*RRC7#+RCB21#*RRC8#+RCB22#*RRC9#+RCB23#*RRC10#+DC#*RRC11#+DC4#*RRC12#
    DS1#=DS0#:DC1#=DC0#

   X%=DC0#*80+64
   IF X%>127 THEN X%=127
   IF X%<0 THEN X%=0
   Y%=DS0#*80+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,#CYAN
   COL%=0

   ENDIF
  ELSE
   RBT#=RBT#+Q1%
   IF RBT#>=RST# THEN
    DS0#=RSB1#*RRC12#+RSB2#*RRC11#+RSB3#*RRC10#+RSB4#*RRC9#+RSB5#*RRC8#+RSB6#*RRC7#+RSB7#*RRC6#+RSB8#*RRC5#+RSB9#*RRC4#+RSB10#*RRC3#+RSB11#*RRC2#+RSB12#*RRC1#+RSB13#*RRC0#+RSB14#*RRC1#+RSB15#*RRC2#+RSB16#*RRC3#+RSB17#*RRC4#+RSB18#*RRC5#+RSB19#*RRC6#+RSB20#*RRC7#+RSB21#*RRC8#+RSB22#*RRC9#+RSB23#*RRC10#+DS#*RRC11#+DS4#*RRC12#
    DC0#=RCB1#*RRC12#+RCB2#*RRC11#+RCB3#*RRC10#+RCB4#*RRC9#+RCB5#*RRC8#+RCB6#*RRC7#+RCB7#*RRC6#+RCB8#*RRC5#+RCB9#*RRC4#+RCB10#*RRC3#+RCB11#*RRC2#+RCB12#*RRC1#+RCB13#*RRC0#+RCB14#*RRC1#+RCB15#*RRC2#+RCB16#*RRC3#+RCB17#*RRC4#+RCB18#*RRC5#+RCB19#*RRC6#+RCB20#*RRC7#+RCB21#*RRC8#+RCB22#*RRC9#+RCB23#*RRC10#+DC#*RRC11#+DC4#*RRC12#
    RBT#=RBT#+(DS1#*(DS0#-DS3#)+DC1#*(DC0#-DC3#))*RST#/80-RST#
    R#=ATAN(DS0#,DC0#)/PI2#
    DR#=R#-BR#:BR#=R#
    DC3#=DC0#:DS3#=DS0#
    IF DR#<0 THEN DR#=DR#+1
    IF DR#<0.25 THEN
     C1%=0:ER#=DR#-0.125
    ELSEIF DR#<0.5 THEN
     C1%=2:ER#=DR#-0.375
    ELSEIF DR#<0.75 THEN
     C1%=3:ER#=DR#-0.625
    ELSE
     C1%=1:ER#=DR#-0.875
    ENDIF
    
    IF C2%==0 THEN
     IF (C1% AND 1)==0 THEN
      C2%=1:V%=(C1%>>1):F%=1
     ENDIF
    ELSEIF C2%<7 THEN
     V%=V%+(C1%<<C2%)
     C2%=C2%+2:F%=1
    ELSEIF C2%>=7 THEN
     IF (C1% AND 2)==2 THEN
      RB%=V%+((C1% AND 1)<<7)
      C2%=0:F%=1
     ENDIF
    ENDIF
    IF F% THEN
     R8#=(R#+1)*8
     WHILE R8#>0.5:R8#=R8#-1:WEND
DRW#=DRW#-(ER#*10+R8#/1000)*PI2#/MICRATE%
     IF DRW#> DRWMAX# THEN DRW#= DRWMAX#
     IF DRW#<-DRWMAX# THEN DRW#=-DRWMAX#

   X%=DC0#*80+64
   IF X%>127 THEN X%=127
   IF X%<0 THEN X%=0
   Y%=DS0#*80+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,#WHITE
   COL%=0

    ENDIF
   ENDIF
  ENDIF
  
  IF COL% && MICP%-MP%<100 THEN
   DS0#=RSB1#*RRC12#+RSB2#*RRC11#+RSB3#*RRC10#+RSB4#*RRC9#+RSB5#*RRC8#+RSB6#*RRC7#+RSB7#*RRC6#+RSB8#*RRC5#+RSB9#*RRC4#+RSB10#*RRC3#+RSB11#*RRC2#+RSB12#*RRC1#+RSB13#*RRC0#+RSB14#*RRC1#+RSB15#*RRC2#+RSB16#*RRC3#+RSB17#*RRC4#+RSB18#*RRC5#+RSB19#*RRC6#+RSB20#*RRC7#+RSB21#*RRC8#+RSB22#*RRC9#+RSB23#*RRC10#+DS#*RRC11#+DS4#*RRC12#
   DC0#=RCB1#*RRC12#+RCB2#*RRC11#+RCB3#*RRC10#+RCB4#*RRC9#+RCB5#*RRC8#+RCB6#*RRC7#+RCB7#*RRC6#+RCB8#*RRC5#+RCB9#*RRC4#+RCB10#*RRC3#+RCB11#*RRC2#+RCB12#*RRC1#+RCB13#*RRC0#+RCB14#*RRC1#+RCB15#*RRC2#+RCB16#*RRC3#+RCB17#*RRC4#+RCB18#*RRC5#+RCB19#*RRC6#+RCB20#*RRC7#+RCB21#*RRC8#+RCB22#*RRC9#+RCB23#*RRC10#+DC#*RRC11#+DC4#*RRC12#
   CTCNT%=CTCNT%+1
   IF CTCNT%>=64 THEN
    CTCNT%=0:CTP%=CTP%+1
    IF CTP%>=4 THEN CTP%=0
    GFILL CTP%*128,0,CTP%*128+127,127,0
    SPCOLOR CTP%,#WHITE
    SPCOLOR (CTP%+3)MOD 4,QT1%
    SPCOLOR (CTP%+2)MOD 4,QT2%
    SPCOLOR (CTP%+1)MOD 4,QT3%
   ENDIF
   X%=DC0#*80+64
   IF X%>127 THEN X%=127
   IF X%<0 THEN X%=0
   Y%=DS0#*80+64
   IF Y%>127 THEN Y%=127
   IF Y%<0   THEN Y%=0
   GPSET X%+(CTP%<<7),Y%,#BLUE'QBLUEGRAY%
  ENDIF

   RSB0#=RSB2#:RSB1#=RSB3#
   RSB2#=RSB4#:RSB3#=RSB5#
   RSB4#=RSB6#:RSB5#=RSB7#
   RSB6#=RSB8#:RSB7#=RSB9#
   RSB8#=RSB10#:RSB9#=RSB11#
   RSB10#=RSB12#:RSB11#=RSB13#
   RSB12#=RSB14#:RSB13#=RSB15#
   RSB14#=RSB16#:RSB15#=RSB17#
   RSB16#=RSB18#:RSB17#=RSB19#
   RSB18#=RSB20#:RSB19#=RSB21#
   RSB20#=RSB22#:RSB21#=RSB23#
   RSB22#=DS#:RSB23#=DS4#
   
   RCB0#=RCB2#:RCB1#=RCB3#
   RCB2#=RCB4#:RCB3#=RCB5#
   RCB4#=RCB6#:RCB5#=RCB7#
   RCB6#=RCB8#:RCB7#=RCB9#
   RCB8#=RCB10#:RCB9#=RCB11#
   RCB10#=RCB12#:RCB11#=RCB13#
   RCB12#=RCB14#:RCB13#=RCB15#
   RCB14#=RCB16#:RCB15#=RCB17#
   RCB16#=RCB18#:RCB17#=RCB19#
   RCB18#=RCB20#:RCB19#=RCB21#
   RCB20#=RCB22#:RCB21#=RCB23#
   RCB22#=DC#:RCB23#=DC4#
 UNTIL RB%>=0
ENDIF
RETURN

'////////////////////////////////////////////
'DATA PACKET DETECTION
@PACKET_DETECTION
PUSH CD%,RB%
R$="":P%=-1
REPEAT
 WHILE LEN(CD%)>0 && CD%[0]!=&HFF
  DU%=SHIFT(CD%)
 WEND
 WHILE LEN(CD%)>1 && CD%[1]==&HFF
  DU%=SHIFT(CD%)
 WEND
 IF LEN(CD%)<PL%+5 THEN P%=-1:RETURN
 DU%=SHIFT(CD%)
 P%=CD%[0]+CD%[1]*255:R$=""
 CRC%=CALC_CRC(CRCDEF%,CD%[0])
 CRC%=CALC_CRC(CRC%,CD%[1])
 FOR I%=2 TO PL%+1
  CRC%=CALC_CRC(CRC%,CD%[I%])
  R$=R$+CHR$(CD%[I%])
 NEXT
 CRC%=CRC% XOR &HFFFF
UNTIL CRC%==CD%[PL%+2]+CD%[PL%+3]*256
FOR I%=0 TO PL%+3:DU%=SHIFT(CD%):NEXT

IF P%==0 THEN
 'START PACKET
 IF L%>=0 GOTO RETURN
 L%=   (ASC(R$[3])<<24)+(ASC(R$[2])<<16)
 L%=L%+(ASC(R$[1])<< 8)+ASC(R$)
 I%=4
 WHILE R$[I%]!=CHR$(0):INC I%:WEND
 FF$=TO_UNIC$(MID$(R$,4,I%-4))
 CRCDEF%=CRC%
 PCKT$=NEWARRAY$(((L%+PL%-1) DIV PL%)+1)
 FILL PCKT$,""
 PCKT$[P%]=FF$
 PRINT "FILENAME:"+FF$
 PRINT "RECEIVING:0/"+STR$(L%);
 PRINT " ("+STR$(P%)+"/"+STR$(LEN(PCKT$))+")"
ELSE
 IF L%<0 GOTO RETURN
 'DATA PACKET
 IF LEN(PCKT$[P%])==0 THEN
  PCKT$[P%]=R$
  INC L1%,LEN(R$)
 ENDIF
 LOCATE ,CSRY-1
 PRINT "RECEIVING:"+STR$(L1%)+"/"+STR$(L%);
 PRINT " ("+STR$(P%)+"/"+STR$(LEN(PCKT$))+")"
ENDIF

'PROGRESS INDICATOR
GR1%=384*P%/LEN(PCKT$)
GR2%=384*(P%+1)/LEN(PCKT$)
GLINE GR1%,131,GR2%,131,#BLUE

RETURN

'////////////////////////////////////////////
'REQUEST PACKET DETECTION
@REQ_PACKET_DETECTION
PUSH CD%,RB%
PP%=NEWARRAY%(0)
REPEAT
 WHILE LEN(CD%)>0 && CD%[0]!=&HFF
  DU%=SHIFT(CD%)
 WEND
 WHILE LEN(CD%)>1 && CD%[1]==&HFF
  DU%=SHIFT(CD%)
 WEND
 IF LEN(CD%)<13 THEN RETURN
 DU%=SHIFT(CD%)
 CRC%=&HFFFF
 FOR I%=0 TO 9
  CRC%=CALC_CRC(CRC%,CD%[I%])
 NEXT
 CRC%=CRC% XOR &HFFFF
UNTIL CRC%==CD%[10]+CD%[11]*256
FOR I%=0 TO 4
 J%=CD%[I%*2]+CD%[I%*2+1]*255
 IF J%!=&HFEFF THEN PUSH PP%,J%
NEXT
FOR I%=0 TO 11
 DU%=SHIFT(CD%)
NEXT
RETURN

'////////////////////////////////////////////
'PACKET CREATION

DEF CREATE_INFO_PACKET SIZE%,NAME$,PL% OUT CRC%,C%[]
 VAR I%
 DIM D%[0]
 C%=NEWARRAY%(0)
 'HEADER
 PUSH C%,&HFF
 'NUM
 PUSH C%,0:PUSH C%,0
 'SET SIZE
 PUSH C%,(SIZE%    ) AND 255
 PUSH C%,(SIZE%>> 8) AND 255
 PUSH C%,(SIZE%>>16) AND 255
 PUSH C%,(SIZE%>>24) AND 255
 'SET FILENAME
 D%=TO_UTF8%(NAME$)
 FOR I%=0 TO LEN(D%)-1
  PUSH C%,D%[I%]
 NEXT
 PUSH C%,0
 'PADDING
 WHILE LEN(C%)<PL%+3:PUSH C%,0:WEND
 CRC%=&HFFFF
 FOR I%=1 TO LEN(C%)-1
  CRC%=CALC_CRC(CRC%,C%[I%])
 NEXT
 CRC%=CRC% XOR &HFFFF
 PUSH C%,      CRC% AND 255
 PUSH C%, (CRC%>>8) AND 255

 DISPLAY 1
  PRINT STR$(SIZE%)
  PRINT NAME$
  PRINT HEX$(CRC%)
  PRINT HEX$(CRCDEF%)
 DISPLAY 0
END

DEF CREATE_DATA_PACKET P%,CC%[],CRC%,PL% OUT C%[]
 VAR I%,K$
 C%=NEWARRAY%(0)
 'HEADER
 PUSH C%,&HFF
 'NUM
 PUSH C%,P% MOD 255
 PUSH C%,P% DIV 255
 'DATA
 FOR I%=(P%-1)*PL% TO MIN(P%*PL%,LEN(CC%))-1
  PUSH C%,CC%[I%]
  K$=K$+CHR$(CC%[I%])
 NEXT
 'PADDING
 WHILE LEN(C%)<PL%+3:PUSH C%,0:WEND
 FOR I%=1 TO LEN(C%)-1
  CRC%=CALC_CRC(CRC%,C%[I%])
 NEXT
 CRC%=CRC% XOR &HFFFF
 PUSH C%,(CRC%   ) AND 255
 PUSH C%,(CRC%>>8) AND 255
 'MONITOR
 DISPLAY 1
  PRINT K$
  PRINT HEX$(CRC%)
 DISPLAY 0
END

DEF CREATE_REQ_PKT PCKT$[] OUT C%[],LASTP%
 VAR P%
 VAR REQP%=0
 DIM REQPNUM%[0]
 LASTP%=-1
 IF LEN(PCKT$)==0 THEN
  PUSH REQPNUM%,0
  LASTP%=0
  INC REQP%
 ELSE
  P%=0:REQP%=0
  WHILE REQP%<5 && P%<LEN(PCKT$)
   IF LEN(PCKT$[P%])==0 THEN
    INC REQP%
    PUSH REQPNUM%,P%
    LASTP%=P%
   ENDIF
   INC P%
  WEND
 ENDIF
 IF REQP%==0 THEN
  WHILE REQP%<5
   PUSH REQPNUM%,LEN(PCKT$)
   INC REQP%
  WEND
 ENDIF
 WHILE REQP%<5
  PUSH REQPNUM%,&HFEFF
  INC REQP%
 WEND
 VAR CRC%=&HFFFF
 C%=NEWARRAY%(0)
 'HEADER
 PUSH C%,&HFF
 PUSH C%,&HFF
 'NUM
 FOR P%=0 TO REQP%-1
  PUSH C%,REQPNUM%[P%] MOD 255
  CRC%=CALC_CRC(CRC%,C%[LEN(C%)-1])
  PUSH C%,REQPNUM%[P%] DIV 255
  CRC%=CALC_CRC(CRC%,C%[LEN(C%)-1])
 NEXT
 CRC%=CRC% XOR &HFFFF
 PUSH C%,(CRC%   ) AND 255
 PUSH C%,(CRC%>>8) AND 255
END

'////////////////////////////////////////////
'MODULATION
DEF MODULATE_INIT
 PS#=0:T#=0:DVP#=0
 RSB0#=0:RSB1#=0:RSB2#=0:RSB3#=0:RSB4#=0
 RSB5#=0:RSB6#=0:RSB7#=0:RSB8#=0:RSB9#=0
 RSB10#=0:RSB11#=0:RSB12#=0:RSB13#=0:RSB14#=0
 RSB15#=0:RSB16#=0:RSB17#=0:RSB18#=0:RSB19#=0
 RSB20#=0:RSB21#=0:RSB22#=0:RSB23#=0
 RCB0#=0:RCB1#=0:RCB2#=0:RCB3#=0:RCB4#=0
 RCB5#=0:RCB6#=0:RCB7#=0:RCB8#=0:RCB9#=0
 RCB10#=0:RCB11#=0:RCB12#=0:RCB13#=0:RCB14#=0
 RCB15#=0:RCB16#=0:RCB17#=0:RCB18#=0:RCB19#=0
 RCB20#=0:RCB21#=0:RCB22#=0:RCB23#=0
END

DEF MODULATE C%[],DPH#,DPL#,DB# OUT D%[]
 'VAR PS#=0,T#=0,DVP#,RSB#,RCB#
 VAR I%,J%,V%,M#,M%,DS0#,DC0#,DS1#,DC1#
 VAR DP#=DPH#
 VAR VOLP#=30000/SQR(2)*DB#
 VAR VOLW#=127/SQR(2)*DB# 
 DIM C1%[0]
 D%=NEWARRAY%(0)
 IF SMODT%==0 THEN
  'FSK
  'TONE
  IF USEPCM% THEN
   FOR J%=0 TO 127
    PUSH D%,SIN(PS#)*30000*J%/128
    PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   NEXT
   FOR J%=0 TO 127
    PUSH D%,SIN(PS#)*30000
    PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   NEXT
  ELSE
   FOR J%=0 TO 127
    M#=SIN(PS#)*127*J%/128+121+RNDF()+RNDF()
    PUSH D%,MIN(MAX(FLOOR(M#),0),255)
    PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   NEXT
   FOR J%=0 TO 127
    M#=SIN(PS#)*127+127+RNDF()+RNDF()
    PUSH D%,MIN(MAX(FLOOR(M#),0),255)
    PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   NEXT
  ENDIF
  I%=0:J%=0:T#=0
  V%=512+((C%[I%] AND 255)<<1)
  IF V% AND 1 THEN DP#=DPH# ELSE DP#=DPL#
  WHILE TRUE
   IF BUTTON(1) AND #B THEN RETURN
   IF USEPCM% THEN
    PUSH D%,SIN(PS#)*30000
   ELSE
    M%=SIN(PS#)*127+RNDF()+RNDF()
    IF M%>128 THEN M%=128
    IF M%<-127 THEN M%=-127
    PUSH D%,M%+127
   ENDIF
   T#=T#+1
   IF T#<DB# THEN
    PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   ELSE
    T#=T#-DB#
    PS#=PS#+DP#*(1-T#)
    V%=V%>>1:J%=J%+1
    IF J%>9 THEN
     J%=0:I%=I%+1
     IF I%>=LEN(C%) THEN BREAK
     V%=512+((C%[I%] AND 255)<<1)
    ENDIF
    IF V% AND 1 THEN DP#=DPH# ELSE DP#=DPL#
    PS#=PS#+DP#*T#
    IF PS#>7 THEN PS#=PS#-PI2#
   ENDIF
  WEND
  FOR J%=0 TO 127
   IF USEPCM% THEN
    PUSH D%,SIN(PS#)*30000*(128-J%)/128
   ELSE
 M%=SIN(PS#)*127*(128-J%)/128+RNDF()+RNDF()
    IF M%>128 THEN M%=128
    IF M%<-127 THEN M%=-127
    PUSH D%,M%+127
   ENDIF
   PS#=PS#+DP#
  NEXT
 ELSEIF SMODT%==1 THEN
  'PSK
  COPY C1%,C%
  FOR I%=1 TO  0:UNSHIFT C1%,&HFF:NEXT
  FOR I%=1 TO 13:UNSHIFT C1%,&HCC:NEXT
  I%=-1:J%=8:'T#=0:DVP#=0
  WHILE TRUE
   IF BUTTON(1) AND #B THEN RETURN
   IF T#>=0 THEN
    T#=T#-DB#:V%=V%>>2:J%=J%+2
    IF J%>9 THEN
     J%=0:I%=I%+1
     IF I%>=LEN(C1%) THEN
      V%=&H398
     ELSE
      V%=512+((C1%[I%] AND 255)<<1)
     ENDIF
    ENDIF
    VV%=V% AND 3
    IF VV%==0 THEN
     DVP#=DVP#+1*PI()/4
    ELSEIF VV%==1 THEN
     DVP#=DVP#+7*PI()/4
    ELSEIF VV%==2 THEN
     DVP#=DVP#+3*PI()/4
    ELSE
     DVP#=DVP#+5*PI()/4
    ENDIF
    IF DVP#>7 THEN DVP#=DVP#-PI2#
    DS0#=SIN(DVP#):DC0#=COS(DVP#)
   ELSE
    DS0#=0:DC0#=0
   ENDIF
   DS#=RSB0#*RRC12#+RSB1#*RRC11#+RSB2#*RRC10#+RSB3#*RRC9#+RSB4#*RRC8#+RSB5#*RRC7#+RSB6#*RRC6#+RSB7#*RRC5#+RSB8#*RRC4#+RSB9#*RRC3#+RSB10#*RRC2#+RSB11#*RRC1#+RSB12#*RRC0#+RSB13#*RRC1#+RSB14#*RRC2#+RSB15#*RRC3#+RSB16#*RRC4#+RSB17#*RRC5#+RSB18#*RRC6#+RSB19#*RRC7#+RSB20#*RRC8#+RSB21#*RRC9#+RSB22#*RRC10#+RSB23#*RRC11#+DS0#*RRC12#
   DC#=RCB0#*RRC12#+RCB1#*RRC11#+RCB2#*RRC10#+RCB3#*RRC9#+RCB4#*RRC8#+RCB5#*RRC7#+RCB6#*RRC6#+RCB7#*RRC5#+RCB8#*RRC4#+RCB9#*RRC3#+RCB10#*RRC2#+RCB11#*RRC1#+RCB12#*RRC0#+RCB13#*RRC1#+RCB14#*RRC2#+RCB15#*RRC3#+RCB16#*RRC4#+RCB17#*RRC5#+RCB18#*RRC6#+RCB19#*RRC7#+RCB20#*RRC8#+RCB21#*RRC9#+RCB22#*RRC10#+RCB23#*RRC11#+DC0#*RRC12#
   
   IF USEPCM% THEN
    PUSH D%,(SIN(PS#)*DS#+COS(PS#)*DC#)*VOLP#
   ELSE
    M%=(SIN(PS#)*DS#+COS(PS#)*DC#)*VOLW#+RNDF()+RNDF()
    IF M%>128 THEN M%=128
    IF M%<-127 THEN M%=-127
    PUSH D%,M%+127
   ENDIF
   T#=T#+1
   PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   'IF LEN(D%)>=OUTRATE% THEN BREAK
   'LOOP EXPANTION
   IF T#>=0 THEN
    T#=T#-DB#:V%=V%>>2:J%=J%+2
    IF J%>9 THEN
     J%=0:I%=I%+1
     IF I%>=LEN(C1%) THEN
      V%=&H398
     ELSE
      V%=512+((C1%[I%] AND 255)<<1)
     ENDIF
    ENDIF
    VV%=V% AND 3
    IF VV%==0 THEN
     DVP#=DVP#+1*PI()/4
    ELSEIF VV%==1 THEN
     DVP#=DVP#+7*PI()/4
    ELSEIF VV%==2 THEN
     DVP#=DVP#+3*PI()/4
    ELSE
     DVP#=DVP#+5*PI()/4
    ENDIF
    IF DVP#>7 THEN DVP#=DVP#-PI2#
    DS1#=SIN(DVP#):DC1#=COS(DVP#)
   ELSE
    DS1#=0:DC1#=0
   ENDIF
   DS#=RSB1#*RRC12#+RSB2#*RRC11#+RSB3#*RRC10#+RSB4#*RRC9#+RSB5#*RRC8#+RSB6#*RRC7#+RSB7#*RRC6#+RSB8#*RRC5#+RSB9#*RRC4#+RSB10#*RRC3#+RSB11#*RRC2#+RSB12#*RRC1#+RSB13#*RRC0#+RSB14#*RRC1#+RSB15#*RRC2#+RSB16#*RRC3#+RSB17#*RRC4#+RSB18#*RRC5#+RSB19#*RRC6#+RSB20#*RRC7#+RSB21#*RRC8#+RSB22#*RRC9#+RSB23#*RRC10#+DS0#*RRC11#+DS1#*RRC12#
   DC#=RCB1#*RRC12#+RCB2#*RRC11#+RCB3#*RRC10#+RCB4#*RRC9#+RCB5#*RRC8#+RCB6#*RRC7#+RCB7#*RRC6#+RCB8#*RRC5#+RCB9#*RRC4#+RCB10#*RRC3#+RCB11#*RRC2#+RCB12#*RRC1#+RCB13#*RRC0#+RCB14#*RRC1#+RCB15#*RRC2#+RCB16#*RRC3#+RCB17#*RRC4#+RCB18#*RRC5#+RCB19#*RRC6#+RCB20#*RRC7#+RCB21#*RRC8#+RCB22#*RRC9#+RCB23#*RRC10#+DC0#*RRC11#+DC1#*RRC12#
   RSB0#=RSB2#:RSB1#=RSB3#:
   RSB2#=RSB4#:RSB3#=RSB5#
   RSB4#=RSB6#:RSB5#=RSB7#
   RSB6#=RSB8#:RSB7#=RSB9#
   RSB8#=RSB10#:RSB9#=RSB11#
   RSB10#=RSB12#:RSB11#=RSB13#
   RSB12#=RSB14#:RSB13#=RSB15#
   RSB14#=RSB16#:RSB15#=RSB17#
   RSB16#=RSB18#:RSB17#=RSB19#
   RSB18#=RSB20#:RSB19#=RSB21#
   RSB20#=RSB22#:RSB21#=RSB23#
   RSB22#=DS0#:RSB23#=DS1#
   RCB0#=RCB2#:RCB1#=RCB3#
   RCB2#=RCB4#:RCB3#=RCB5#
   RCB4#=RCB6#:RCB5#=RCB7#
   RCB6#=RCB8#:RCB7#=RCB9#
   RCB8#=RCB10#:RCB9#=RCB11#
   RCB10#=RCB12#:RCB11#=RCB13#
   RCB12#=RCB14#:RCB13#=RCB15#
   RCB14#=RCB16#:RCB15#=RCB17#
   RCB16#=RCB18#:RCB17#=RCB19#
   RCB18#=RCB20#:RCB19#=RCB21#
   RCB20#=RCB22#:RCB21#=RCB23#
   RCB22#=DC0#:RCB23#=DC1#
   
   IF USEPCM% THEN
    PUSH D%,(SIN(PS#)*DS#+COS(PS#)*DC#)*VOLP#
   ELSE
    M%=(SIN(PS#)*DS#+COS(PS#)*DC#)*VOLW#+RNDF()+RNDF()
    IF M%>128 THEN M%=128
    IF M%<-127 THEN M%=-127
    PUSH D%,M%+127
   ENDIF
   T#=T#+1
   PS#=PS#+DP#:IF PS#>7 THEN PS#=PS#-PI2#
   IF LEN(D%)>=OUTRATE% THEN BREAK
   
  WEND
  IF I%<LEN(C1%) THEN STOP
 ELSE
  STOP
 ENDIF
 IF LEN(D%)>OUTRATE% THEN STOP
 WHILE LEN(D%)<OUTRATE%
  PUSH D%,128
 WEND
END

DEF MODULATE_TONE FQ# OUT D%[]
 VAR J%,M#
 VAR PS#=0,DP#=PI2#*FQ#/OUTRATE%*2
 D%=NEWARRAY%(0)
 REPEAT
  IF USEPCM% THEN
   PUSH D%,SIN(PS#)*30000
  ELSE
   M#=SIN(PS#)*127+128
   INC M#,RNDF()+RNDF()-1
   PUSH D%,MIN(MAX(FLOOR(M#),0),255)
  ENDIF
  PS#=PS#+DP#
  IF PS#>7 THEN PS#=PS#-PI()*2
 UNTIL LEN(D%)>=OUTRATE%
END

'////////////////////////////////////////////

DEF PRINTTITLE
 VAR MES$
 CLS
 COLOR 12
 PRINT TITLE$
 PRINT 
 MES$="FREEMEMORY:"+STR$(FREEMEM)
 PRINT " "*(50-LEN(MES$))+MES$
 MES$="PETITCOM VERSION:"+HEX$(VERSION)
 PRINT " "*(50-LEN(MES$))+MES$
 COLOR 15
END

DEF NEWARRAY%(LENGTH%)
 DIM ARRAY[LENGTH%]
 RETURN ARRAY
END

DEF NEWARRAY$(LENGTH%)
 DIM ARRAY$[LENGTH%]
 RETURN ARRAY$
END

DEF TO_UTF8%(UNICODE$)
 VAR I%,C%,K%,D%,S$
 DIM DD%[0]
 FOR I%=0 TO LEN(UNICODE$)-1
  C%=ASC(UNICODE$[I%])
  IF C%<&H80 THEN
   PUSH DD%,C%
  ELSE
   S$="":K%=&H80:D%=&H40
   WHILE C%>=D%
    S$=CHR$(&H80+(C% AND &H3F))+S$
    C%=C%>>6:K%=(K%>>1)+&H80:D%=D%>>1
   WEND
   PUSH DD%,(K%+C%)
   FOR J%=0 TO LEN(S$)-1
    PUSH DD%,ASC(MID$(S$,J%,1))
   NEXT
  ENDIF
 NEXT
 RETURN DD%
END

DEF TO_UNIC$(UTF8$)
 VAR I%,C%,D%,K%,R$=""
 WHILE I%<LEN(UTF8$)
  C%=ASC(UTF8$[I%])
  INC I%
  IF C%<&H80 || C%>=&HC0 THEN
   K%=0
   IF C%>=&HFC THEN K%=5:C%=(C% AND &H1)<<30:GOTO @TO_UNIC_1
   IF C%>=&HF8 THEN K%=4:C%=(C% AND &H3)<<24:GOTO @TO_UNIC_1
   IF C%>=&HF0 THEN K%=3:C%=(C% AND &H7)<<18:GOTO @TO_UNIC_1
   IF C%>=&HE0 THEN K%=2:C%=(C% AND &HF)<<12:GOTO @TO_UNIC_1
   IF C%>=&HC0 THEN K%=1:C%=(C% AND &H1F)<<6
   @TO_UNIC_1
   IF K%>0 && I%<LEN(UTF8$) THEN
    D%=ASC(UTF8$[I%])
    IF (D% AND &HC0)==&H80 THEN
     INC I%:DEC K%
     C%=C%+((D% AND &H3F)<<(K%*6))
     GOTO @TO_UNIC_1
    ENDIF
   ENDIF
   R$=R$+CHR$(C%)
  ENDIF
 WEND
 RETURN R$
END

DEF CALC_CRCTABLE OUT TBL%[]
 DIM T%[256]
 VAR I%,J%,K%
 FOR I%=0 TO 255
  K%=I%
  FOR  J%=0 TO 7
   IF (K% AND 1)==1 THEN
    K%=(&HC7ED XOR (K%>>1))
   ELSE
    K%=K%>>1
   ENDIF
  NEXT
  T%[I%]=K%
 NEXT
 TBL%=T%
END

DEF CALC_CRC(C%,B%)
 RETURN(CRCTBL%[(C%XOR B%)AND 255]XOR(C%>>8))
END

DEF SET_LPF LPF#[]
 LPF0#=LPF#[0]:LPF1#=LPF#[1]
 LPF2#=LPF#[2]:LPF3#=LPF#[3]
 LPF4#=LPF#[4]:LPF5#=LPF#[5]
 LPF6#=LPF#[6]:LPF7#=LPF#[7]
 LPF8#=LPF#[8]:LPF9#=LPF#[9]
END

DEF GETEXT$(FILENAME$)
 VAR J%=-1,J2%
 WHILE J%+1<LEN(FILENAME$)
  J2%=INSTR(J%+1,FILENAME$,".")
  IF J2%<0 THEN BREAK
  J%=J2%
 WEND
 IF J%<0 THEN RETURN ""
 RETURN MID$(FILENAME$,J%,LEN(FILENAME$)-J%)
END

DEF TOUPPER(IN$)
 VAR J%,C%
 VAR OUT$=""
 FOR J%=0 TO LEN(IN$)-1
  C%=ASC(MID$(IN$,J%,1))
  IF C%>=97 && C%<=122 THEN C%=C%-32
  OUT$=OUT$+CHR$(C%)
 NEXT
 RETURN OUT$
END

DEF LOAD_TXT%(FILENAME$)
 VAR F$
 LOAD "TXT:"+FILENAME$,0 OUT F$
 RETURN TO_UTF8%(F$)
END

DEF LOAD_GRP%(FILENAME$)
 DIM CG%[512,512]
 DIM CC%[0]
 VAR X%,Y%
 LOAD "DAT:"+FILENAME$,CG%,0
 FOR X%=0 TO 511
 FOR Y%=0 TO 511
  PUSH CC%,CG%[X%,Y%] AND 255
  PUSH CC%,CG%[X%,Y%] >> 8
 NEXT
 NEXT
 RETURN CC%
END

DEF LOAD_DAT%(FILENAME$)
 DIM CC%[0],D%[0]
 VAR I%
 LOAD "DAT:"+FILENAME$,D%,0
 FOR I%=0 TO LEN(D%)-1
  PUSH CC%,(D%[I%]    ) AND &HFF
  PUSH CC%,(D%[I%]>> 8) AND &HFF
  PUSH CC%,(D%[I%]>>16) AND &HFF
  PUSH CC%,(D%[I%]>>24) AND &HFF
 NEXT
 RETURN CC%
END

DEF SAVE_GRP FILENAME$,PCKT$[]
 DIM LINE%[512]
 VAR X%=0,Y%=0,K%=1,J%=0,I%=0,V%
 
 GPAGE 0,2
 WHILE K%<LEN(PCKT$)
  WHILE J%<LEN(PCKT$[K%])
   IF I%==0 THEN
    V%=ASC(MID$(PCKT$[K%],J%,1))
    INC I%
   ELSE
LINE%[X%]=V%+(ASC(MID$(PCKT$[K%],J%,1))<<8)
    I%=0:INC X%
    IF X%>=512 THEN
     GLOAD 0,Y%,512,1,LINE%,1,1
     X%=0:INC Y%:FILL LINE%,0
     IF Y%>=512 GOTO @SAVE_GRP1
    ENDIF
   ENDIF
   INC J%
  WEND
  J%=0:INC K%
 WEND
 IF X%>0 THEN GLOAD 0,Y%,X%+1,1,LINE%,1,1
 @SAVE_GRP1
 GPAGE 0,4
 SAVE "GRP2:"+FILENAME$
END

DEF SAVE_TXT FILENAME$,PCKT$[]
 VAR K%=1,J%=0,V$
 WHILE K%<LEN(PCKT$)
  INC V$,PCKT$[K%]
  INC K%
 WEND
 V$=MID$(V$,0,L%)
 SAVE "TXT:"+FILENAME$,TO_UNIC$(V$)
END

DEF SAVE_DAT FILENAME$,PCKT$[]
 VAR I%=0,K%=1,J%=0,V%
 DIM CC%[0]
 CC%=NEWARRAY%(0)
 WHILE K%<LEN(PCKT$)
  WHILE J%<LEN(PCKT$[K%])
   V%=ASC(MID$(PCKT$[K%],J%,1))
   IF (I% MOD 4)==0 THEN
    PUSH CC%,V%
   ELSE
    INC CC%[LEN(CC%)-1],V%<<((I% AND 3)<<3)
   ENDIF
   INC I%:IF I%>=L% THEN @SAVE_DAT1
   INC J%
  WEND
  J%=0:INC K%
 WEND
 @SAVE_DAT1
 SAVE "DAT:"+FILENAME$,CC%
END

DEF WAITPLAY(PLAY%)
 IF USEPCM% THEN
  WHILE (PCMPOS-16384)*(1-WAVCH1%*2)<0
   VSYNC 1
   IF BUTTON(1) AND #B THEN RETURN -1
  WEND
 ELSE
  WHILE MAINCNT<STCNT%-1
   VSYNC 1
   IF BUTTON(1) AND #B THEN RETURN -1
  WEND
  WHILE MAINCNT<STCNT%:WEND
  IF PLAY%==1 THEN
   STCNT%=STCNT%+121
   BGMPLAY WAVCH2%,128+WAVCH2%,127
  ENDIF
 ENDIF
 RETURN 0
END

''''''
'SELECT UTIL FROM STRING LIST
DEF SELECT(L$[],NOMES$)
 VAR CY%=CSRY+1
 VAR B%=BUTTON(1),SCNT%=-1
 VAR CI%=0,CI2%=0
 VAR I%,X#,Y#
 IF LEN(L$)==0 THEN
  LOCATE 0,CY%:COLOR 15,3:PRINT NOMES$;
  COLOR 15,0
  WHILE TRUE
   VSYNC 1:B%=BUTTON(1)
   IF B% AND #B THEN RETURN -1
  WEND
 ENDIF
 WHILE TRUE
  LOCATE 0,CY%-1
  IF CI2%>0 THEN PRINT "" ELSE PRINT " "
  FOR I%=0 TO MIN(LEN(L$)-CI2%-1,28-CY%)
   IF I%==CI% THEN COLOR 15,3
   PRINT L$[I%+CI2%];
   COLOR 15,0
   PRINT " "*(50-CSRX);
  NEXT
  FOR I%=I% TO 28-CY%
   PRINT " "*50;
  NEXT
  LOCATE 0,29
  IF LEN(L$)-CI2%-1>28-CY% THEN 
   PRINT "";
  ELSE
   PRINT " ";
  ENDIF
  WHILE TRUE
   VSYNC 1:B%=BUTTON(1)
   IF B% AND #B THEN RETURN -1
   IF B%==#A THEN RETURN CI%+CI2%
   IF B% AND #UP   && CI%+CI2%>0 THEN
    IF CI% >0 THEN DEC CI% ELSE DEC CI2%
    BREAK
   ENDIF
   IF B% AND #DOWN && CI%+CI2%+1<LEN(L$) THEN
    IF CI%+CY%<28 THEN INC CI% ELSE INC CI2%
    BREAK
   ENDIF
   STICK OUT X#,Y#
   IF Y#<-0.5 THEN
    IF MAINCNT>SCNT% THEN
     IF SCNT%<0 THEN
      SCNT%=MAINCNT+30
     ELSE
      SCNT%=MAINCNT+3
     ENDIF
     CI2%=CI2%+(28-CY%)+1
     IF CI2%>LEN(L$)-1-(28-CY%) THEN
      CI2%=MAX(LEN(L$)-1-(28-CY%),0)
      CI%=MIN(28-CY%,LEN(L$)-1-CI2%)
     ENDIF
     BREAK
    ENDIF
   ELSEIF Y#>0.5 THEN
    IF MAINCNT>SCNT% THEN
     IF SCNT%<0 THEN
      SCNT%=MAINCNT+30
     ELSE
      SCNT%=MAINCNT+3
     ENDIF
     CI2%=CI2%-(28-CY%)-1
     IF CI2%<0 THEN
      CI2%=0
      CI%=0
     ENDIF
     BREAK
    ENDIF
   ELSE
    SCNT%=-1
   ENDIF
  WEND
 WEND
END
'SELECT NUMBER
DEF SELECTNUM(MIN%,MAX%)
 VAR CY%=CSRY+1,B%,CI%=MIN%
 WHILE TRUE
  IF CI%<MIN% THEN CI%=MIN%
  IF CI%>MAX% THEN CI%=MAX%
  LOCATE 0,CY%-1:PRINT " "*50;
  LOCATE 0,CY%-1:PRINT STR$(CI%)
  REPEAT
   VSYNC 1:B%=BUTTON(1)
  UNTIL B%!=0
  IF B%==#A THEN RETURN CI%
  IF B% AND #UP THEN INC CI%
  IF B% AND #RIGHT THEN CI%=CI%+10
  IF B% AND #DOWN THEN DEC CI%
  IF B% AND #LEFT THEN CI%=CI%-10
  IF B% AND #B THEN RETURN -1
 WEND
END

